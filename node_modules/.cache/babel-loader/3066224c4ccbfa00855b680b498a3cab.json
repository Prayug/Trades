{"ast":null,"code":"import { timeInterval } from \"./interval.js\";\nexport const timeYear = timeInterval(date => {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setFullYear(date.getFullYear() + step);\n}, (start, end) => {\n  return end.getFullYear() - start.getFullYear();\n}, date => {\n  return date.getFullYear();\n}); // An optimized implementation for this simple case.\n\ntimeYear.every = k => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval(date => {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport const timeYears = timeYear.range;\nexport const utcYear = timeInterval(date => {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, (start, end) => {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, date => {\n  return date.getUTCFullYear();\n}); // An optimized implementation for this simple case.\n\nutcYear.every = k => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval(date => {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport const utcYears = utcYear.range;","map":{"version":3,"sources":["/Users/prayugsigdel/Coding/Trades/node_modules/d3-time/src/year.js"],"names":["timeInterval","timeYear","date","setMonth","setHours","step","setFullYear","getFullYear","start","end","every","k","isFinite","Math","floor","timeYears","range","utcYear","setUTCMonth","setUTCHours","setUTCFullYear","getUTCFullYear","utcYears"],"mappings":"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","sourcesContent":["import {timeInterval} from \"./interval.js\";\n\nexport const timeYear = timeInterval((date) => {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setFullYear(date.getFullYear() + step);\n}, (start, end) => {\n  return end.getFullYear() - start.getFullYear();\n}, (date) => {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\ntimeYear.every = (k) => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval((date) => {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport const timeYears = timeYear.range;\n\nexport const utcYear = timeInterval((date) => {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, (start, end) => {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, (date) => {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = (k) => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval((date) => {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport const utcYears = utcYear.range;\n"]},"metadata":{},"sourceType":"module"}