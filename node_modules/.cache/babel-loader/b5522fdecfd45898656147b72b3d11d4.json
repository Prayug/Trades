{"ast":null,"code":"var _excluded = [\"x\", \"y\", \"lineHeight\", \"capHeight\", \"scaleToFit\", \"textAnchor\", \"verticalAnchor\", \"fill\"],\n    _excluded2 = [\"dx\", \"dy\", \"angle\", \"className\", \"breakAll\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n\n  if (null != t) {\n    var e,\n        n,\n        i,\n        u,\n        a = [],\n        f = !0,\n        o = !1;\n\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n\n    return a;\n  }\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport React, { useMemo } from 'react';\nimport isNil from 'lodash/isNil';\nimport clsx from 'clsx';\nimport { isNumber, isNumOrStr } from '../util/DataUtils';\nimport { Global } from '../util/Global';\nimport { filterProps } from '../util/ReactUtils';\nimport { getStringSize } from '../util/DOMUtils';\nimport { reduceCSSCalc } from '../util/ReduceCSSCalc';\nvar BREAKING_SPACES = /[ \\f\\n\\r\\t\\v\\u2028\\u2029]+/;\n\nvar calculateWordWidths = function calculateWordWidths(_ref) {\n  var children = _ref.children,\n      breakAll = _ref.breakAll,\n      style = _ref.style;\n\n  try {\n    var words = [];\n\n    if (!isNil(children)) {\n      if (breakAll) {\n        words = children.toString().split('');\n      } else {\n        words = children.toString().split(BREAKING_SPACES);\n      }\n    }\n\n    var wordsWithComputedWidth = words.map(function (word) {\n      return {\n        word: word,\n        width: getStringSize(word, style).width\n      };\n    });\n    var spaceWidth = breakAll ? 0 : getStringSize(\"\\xA0\", style).width;\n    return {\n      wordsWithComputedWidth: wordsWithComputedWidth,\n      spaceWidth: spaceWidth\n    };\n  } catch (e) {\n    return null;\n  }\n};\n\nvar calculateWordsByLines = function calculateWordsByLines(_ref2, initialWordsWithComputedWith, spaceWidth, lineWidth, scaleToFit) {\n  var maxLines = _ref2.maxLines,\n      children = _ref2.children,\n      style = _ref2.style,\n      breakAll = _ref2.breakAll;\n  var shouldLimitLines = isNumber(maxLines);\n  var text = children;\n\n  var calculate = function calculate() {\n    var words = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return words.reduce(function (result, _ref3) {\n      var word = _ref3.word,\n          width = _ref3.width;\n      var currentLine = result[result.length - 1];\n\n      if (currentLine && (lineWidth == null || scaleToFit || currentLine.width + width + spaceWidth < Number(lineWidth))) {\n        // Word can be added to an existing line\n        currentLine.words.push(word);\n        currentLine.width += width + spaceWidth;\n      } else {\n        // Add first word to line or word is too long to scaleToFit on existing line\n        var newLine = {\n          words: [word],\n          width: width\n        };\n        result.push(newLine);\n      }\n\n      return result;\n    }, []);\n  };\n\n  var originalResult = calculate(initialWordsWithComputedWith);\n\n  var findLongestLine = function findLongestLine(words) {\n    return words.reduce(function (a, b) {\n      return a.width > b.width ? a : b;\n    });\n  };\n\n  if (!shouldLimitLines) {\n    return originalResult;\n  }\n\n  var suffix = 'â€¦';\n\n  var checkOverflow = function checkOverflow(index) {\n    var tempText = text.slice(0, index);\n    var words = calculateWordWidths({\n      breakAll: breakAll,\n      style: style,\n      children: tempText + suffix\n    }).wordsWithComputedWidth;\n    var result = calculate(words);\n    var doesOverflow = result.length > maxLines || findLongestLine(result).width > Number(lineWidth);\n    return [doesOverflow, result];\n  };\n\n  var start = 0;\n  var end = text.length - 1;\n  var iterations = 0;\n  var trimmedResult;\n\n  while (start <= end && iterations <= text.length - 1) {\n    var middle = Math.floor((start + end) / 2);\n    var prev = middle - 1;\n\n    var _checkOverflow = checkOverflow(prev),\n        _checkOverflow2 = _slicedToArray(_checkOverflow, 2),\n        doesPrevOverflow = _checkOverflow2[0],\n        result = _checkOverflow2[1];\n\n    var _checkOverflow3 = checkOverflow(middle),\n        _checkOverflow4 = _slicedToArray(_checkOverflow3, 1),\n        doesMiddleOverflow = _checkOverflow4[0];\n\n    if (!doesPrevOverflow && !doesMiddleOverflow) {\n      start = middle + 1;\n    }\n\n    if (doesPrevOverflow && doesMiddleOverflow) {\n      end = middle - 1;\n    }\n\n    if (!doesPrevOverflow && doesMiddleOverflow) {\n      trimmedResult = result;\n      break;\n    }\n\n    iterations++;\n  } // Fallback to originalResult (result without trimming) if we cannot find the\n  // where to trim.  This should not happen :tm:\n\n\n  return trimmedResult || originalResult;\n};\n\nvar getWordsWithoutCalculate = function getWordsWithoutCalculate(children) {\n  var words = !isNil(children) ? children.toString().split(BREAKING_SPACES) : [];\n  return [{\n    words: words\n  }];\n};\n\nvar getWordsByLines = function getWordsByLines(_ref4) {\n  var width = _ref4.width,\n      scaleToFit = _ref4.scaleToFit,\n      children = _ref4.children,\n      style = _ref4.style,\n      breakAll = _ref4.breakAll,\n      maxLines = _ref4.maxLines; // Only perform calculations if using features that require them (multiline, scaleToFit)\n\n  if ((width || scaleToFit) && !Global.isSsr) {\n    var wordsWithComputedWidth, spaceWidth;\n    var wordWidths = calculateWordWidths({\n      breakAll: breakAll,\n      children: children,\n      style: style\n    });\n\n    if (wordWidths) {\n      var wcw = wordWidths.wordsWithComputedWidth,\n          sw = wordWidths.spaceWidth;\n      wordsWithComputedWidth = wcw;\n      spaceWidth = sw;\n    } else {\n      return getWordsWithoutCalculate(children);\n    }\n\n    return calculateWordsByLines({\n      breakAll: breakAll,\n      children: children,\n      maxLines: maxLines,\n      style: style\n    }, wordsWithComputedWidth, spaceWidth, width, scaleToFit);\n  }\n\n  return getWordsWithoutCalculate(children);\n};\n\nvar DEFAULT_FILL = '#808080';\nexport var Text = function Text(_ref5) {\n  var _ref5$x = _ref5.x,\n      propsX = _ref5$x === void 0 ? 0 : _ref5$x,\n      _ref5$y = _ref5.y,\n      propsY = _ref5$y === void 0 ? 0 : _ref5$y,\n      _ref5$lineHeight = _ref5.lineHeight,\n      lineHeight = _ref5$lineHeight === void 0 ? '1em' : _ref5$lineHeight,\n      _ref5$capHeight = _ref5.capHeight,\n      capHeight = _ref5$capHeight === void 0 ? '0.71em' : _ref5$capHeight,\n      _ref5$scaleToFit = _ref5.scaleToFit,\n      scaleToFit = _ref5$scaleToFit === void 0 ? false : _ref5$scaleToFit,\n      _ref5$textAnchor = _ref5.textAnchor,\n      textAnchor = _ref5$textAnchor === void 0 ? 'start' : _ref5$textAnchor,\n      _ref5$verticalAnchor = _ref5.verticalAnchor,\n      verticalAnchor = _ref5$verticalAnchor === void 0 ? 'end' : _ref5$verticalAnchor,\n      _ref5$fill = _ref5.fill,\n      fill = _ref5$fill === void 0 ? DEFAULT_FILL : _ref5$fill,\n      props = _objectWithoutProperties(_ref5, _excluded);\n\n  var wordsByLines = useMemo(function () {\n    return getWordsByLines({\n      breakAll: props.breakAll,\n      children: props.children,\n      maxLines: props.maxLines,\n      scaleToFit: scaleToFit,\n      style: props.style,\n      width: props.width\n    });\n  }, [props.breakAll, props.children, props.maxLines, scaleToFit, props.style, props.width]);\n\n  var dx = props.dx,\n      dy = props.dy,\n      angle = props.angle,\n      className = props.className,\n      breakAll = props.breakAll,\n      textProps = _objectWithoutProperties(props, _excluded2);\n\n  if (!isNumOrStr(propsX) || !isNumOrStr(propsY)) {\n    return null;\n  }\n\n  var x = propsX + (isNumber(dx) ? dx : 0);\n  var y = propsY + (isNumber(dy) ? dy : 0);\n  var startDy;\n\n  switch (verticalAnchor) {\n    case 'start':\n      startDy = reduceCSSCalc(\"calc(\".concat(capHeight, \")\"));\n      break;\n\n    case 'middle':\n      startDy = reduceCSSCalc(\"calc(\".concat((wordsByLines.length - 1) / 2, \" * -\").concat(lineHeight, \" + (\").concat(capHeight, \" / 2))\"));\n      break;\n\n    default:\n      startDy = reduceCSSCalc(\"calc(\".concat(wordsByLines.length - 1, \" * -\").concat(lineHeight, \")\"));\n      break;\n  }\n\n  var transforms = [];\n\n  if (scaleToFit) {\n    var lineWidth = wordsByLines[0].width;\n    var width = props.width;\n    transforms.push(\"scale(\".concat((isNumber(width) ? width / lineWidth : 1) / lineWidth, \")\"));\n  }\n\n  if (angle) {\n    transforms.push(\"rotate(\".concat(angle, \", \").concat(x, \", \").concat(y, \")\"));\n  }\n\n  if (transforms.length) {\n    textProps.transform = transforms.join(' ');\n  }\n\n  return /*#__PURE__*/React.createElement(\"text\", _extends({}, filterProps(textProps, true), {\n    x: x,\n    y: y,\n    className: clsx('recharts-text', className),\n    textAnchor: textAnchor,\n    fill: fill.includes('url') ? DEFAULT_FILL : fill\n  }), wordsByLines.map(function (line, index) {\n    var words = line.words.join(breakAll ? '' : ' ');\n    return /*#__PURE__*/React.createElement(\"tspan\", {\n      x: x,\n      dy: index === 0 ? startDy : lineHeight,\n      key: words\n    }, words);\n  }));\n};","map":{"version":3,"sources":["/Users/prayugsigdel/Coding/Trades/node_modules/recharts/es6/component/Text.js"],"names":["_excluded","_excluded2","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","arr2","r","l","t","Symbol","iterator","e","u","a","f","next","done","push","value","isArray","React","useMemo","isNil","clsx","isNumber","isNumOrStr","Global","filterProps","getStringSize","reduceCSSCalc","BREAKING_SPACES","calculateWordWidths","_ref","children","breakAll","style","words","split","wordsWithComputedWidth","map","word","width","spaceWidth","calculateWordsByLines","_ref2","initialWordsWithComputedWith","lineWidth","scaleToFit","maxLines","shouldLimitLines","text","calculate","undefined","reduce","result","_ref3","currentLine","Number","newLine","originalResult","findLongestLine","b","suffix","checkOverflow","index","tempText","doesOverflow","start","end","iterations","trimmedResult","middle","Math","floor","prev","_checkOverflow","_checkOverflow2","doesPrevOverflow","_checkOverflow3","_checkOverflow4","doesMiddleOverflow","getWordsWithoutCalculate","getWordsByLines","_ref4","isSsr","wordWidths","wcw","sw","DEFAULT_FILL","Text","_ref5","_ref5$x","x","propsX","_ref5$y","y","propsY","_ref5$lineHeight","lineHeight","_ref5$capHeight","capHeight","_ref5$scaleToFit","_ref5$textAnchor","textAnchor","_ref5$verticalAnchor","verticalAnchor","_ref5$fill","fill","props","wordsByLines","dx","dy","angle","className","textProps","startDy","concat","transforms","transform","join","createElement","includes","line"],"mappings":"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","sourcesContent":["var _excluded = [\"x\", \"y\", \"lineHeight\", \"capHeight\", \"scaleToFit\", \"textAnchor\", \"verticalAnchor\", \"fill\"],\n  _excluded2 = [\"dx\", \"dy\", \"angle\", \"className\", \"breakAll\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport React, { useMemo } from 'react';\nimport isNil from 'lodash/isNil';\nimport clsx from 'clsx';\nimport { isNumber, isNumOrStr } from '../util/DataUtils';\nimport { Global } from '../util/Global';\nimport { filterProps } from '../util/ReactUtils';\nimport { getStringSize } from '../util/DOMUtils';\nimport { reduceCSSCalc } from '../util/ReduceCSSCalc';\nvar BREAKING_SPACES = /[ \\f\\n\\r\\t\\v\\u2028\\u2029]+/;\nvar calculateWordWidths = function calculateWordWidths(_ref) {\n  var children = _ref.children,\n    breakAll = _ref.breakAll,\n    style = _ref.style;\n  try {\n    var words = [];\n    if (!isNil(children)) {\n      if (breakAll) {\n        words = children.toString().split('');\n      } else {\n        words = children.toString().split(BREAKING_SPACES);\n      }\n    }\n    var wordsWithComputedWidth = words.map(function (word) {\n      return {\n        word: word,\n        width: getStringSize(word, style).width\n      };\n    });\n    var spaceWidth = breakAll ? 0 : getStringSize(\"\\xA0\", style).width;\n    return {\n      wordsWithComputedWidth: wordsWithComputedWidth,\n      spaceWidth: spaceWidth\n    };\n  } catch (e) {\n    return null;\n  }\n};\nvar calculateWordsByLines = function calculateWordsByLines(_ref2, initialWordsWithComputedWith, spaceWidth, lineWidth, scaleToFit) {\n  var maxLines = _ref2.maxLines,\n    children = _ref2.children,\n    style = _ref2.style,\n    breakAll = _ref2.breakAll;\n  var shouldLimitLines = isNumber(maxLines);\n  var text = children;\n  var calculate = function calculate() {\n    var words = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return words.reduce(function (result, _ref3) {\n      var word = _ref3.word,\n        width = _ref3.width;\n      var currentLine = result[result.length - 1];\n      if (currentLine && (lineWidth == null || scaleToFit || currentLine.width + width + spaceWidth < Number(lineWidth))) {\n        // Word can be added to an existing line\n        currentLine.words.push(word);\n        currentLine.width += width + spaceWidth;\n      } else {\n        // Add first word to line or word is too long to scaleToFit on existing line\n        var newLine = {\n          words: [word],\n          width: width\n        };\n        result.push(newLine);\n      }\n      return result;\n    }, []);\n  };\n  var originalResult = calculate(initialWordsWithComputedWith);\n  var findLongestLine = function findLongestLine(words) {\n    return words.reduce(function (a, b) {\n      return a.width > b.width ? a : b;\n    });\n  };\n  if (!shouldLimitLines) {\n    return originalResult;\n  }\n  var suffix = 'â€¦';\n  var checkOverflow = function checkOverflow(index) {\n    var tempText = text.slice(0, index);\n    var words = calculateWordWidths({\n      breakAll: breakAll,\n      style: style,\n      children: tempText + suffix\n    }).wordsWithComputedWidth;\n    var result = calculate(words);\n    var doesOverflow = result.length > maxLines || findLongestLine(result).width > Number(lineWidth);\n    return [doesOverflow, result];\n  };\n  var start = 0;\n  var end = text.length - 1;\n  var iterations = 0;\n  var trimmedResult;\n  while (start <= end && iterations <= text.length - 1) {\n    var middle = Math.floor((start + end) / 2);\n    var prev = middle - 1;\n    var _checkOverflow = checkOverflow(prev),\n      _checkOverflow2 = _slicedToArray(_checkOverflow, 2),\n      doesPrevOverflow = _checkOverflow2[0],\n      result = _checkOverflow2[1];\n    var _checkOverflow3 = checkOverflow(middle),\n      _checkOverflow4 = _slicedToArray(_checkOverflow3, 1),\n      doesMiddleOverflow = _checkOverflow4[0];\n    if (!doesPrevOverflow && !doesMiddleOverflow) {\n      start = middle + 1;\n    }\n    if (doesPrevOverflow && doesMiddleOverflow) {\n      end = middle - 1;\n    }\n    if (!doesPrevOverflow && doesMiddleOverflow) {\n      trimmedResult = result;\n      break;\n    }\n    iterations++;\n  }\n\n  // Fallback to originalResult (result without trimming) if we cannot find the\n  // where to trim.  This should not happen :tm:\n  return trimmedResult || originalResult;\n};\nvar getWordsWithoutCalculate = function getWordsWithoutCalculate(children) {\n  var words = !isNil(children) ? children.toString().split(BREAKING_SPACES) : [];\n  return [{\n    words: words\n  }];\n};\nvar getWordsByLines = function getWordsByLines(_ref4) {\n  var width = _ref4.width,\n    scaleToFit = _ref4.scaleToFit,\n    children = _ref4.children,\n    style = _ref4.style,\n    breakAll = _ref4.breakAll,\n    maxLines = _ref4.maxLines;\n  // Only perform calculations if using features that require them (multiline, scaleToFit)\n  if ((width || scaleToFit) && !Global.isSsr) {\n    var wordsWithComputedWidth, spaceWidth;\n    var wordWidths = calculateWordWidths({\n      breakAll: breakAll,\n      children: children,\n      style: style\n    });\n    if (wordWidths) {\n      var wcw = wordWidths.wordsWithComputedWidth,\n        sw = wordWidths.spaceWidth;\n      wordsWithComputedWidth = wcw;\n      spaceWidth = sw;\n    } else {\n      return getWordsWithoutCalculate(children);\n    }\n    return calculateWordsByLines({\n      breakAll: breakAll,\n      children: children,\n      maxLines: maxLines,\n      style: style\n    }, wordsWithComputedWidth, spaceWidth, width, scaleToFit);\n  }\n  return getWordsWithoutCalculate(children);\n};\nvar DEFAULT_FILL = '#808080';\nexport var Text = function Text(_ref5) {\n  var _ref5$x = _ref5.x,\n    propsX = _ref5$x === void 0 ? 0 : _ref5$x,\n    _ref5$y = _ref5.y,\n    propsY = _ref5$y === void 0 ? 0 : _ref5$y,\n    _ref5$lineHeight = _ref5.lineHeight,\n    lineHeight = _ref5$lineHeight === void 0 ? '1em' : _ref5$lineHeight,\n    _ref5$capHeight = _ref5.capHeight,\n    capHeight = _ref5$capHeight === void 0 ? '0.71em' : _ref5$capHeight,\n    _ref5$scaleToFit = _ref5.scaleToFit,\n    scaleToFit = _ref5$scaleToFit === void 0 ? false : _ref5$scaleToFit,\n    _ref5$textAnchor = _ref5.textAnchor,\n    textAnchor = _ref5$textAnchor === void 0 ? 'start' : _ref5$textAnchor,\n    _ref5$verticalAnchor = _ref5.verticalAnchor,\n    verticalAnchor = _ref5$verticalAnchor === void 0 ? 'end' : _ref5$verticalAnchor,\n    _ref5$fill = _ref5.fill,\n    fill = _ref5$fill === void 0 ? DEFAULT_FILL : _ref5$fill,\n    props = _objectWithoutProperties(_ref5, _excluded);\n  var wordsByLines = useMemo(function () {\n    return getWordsByLines({\n      breakAll: props.breakAll,\n      children: props.children,\n      maxLines: props.maxLines,\n      scaleToFit: scaleToFit,\n      style: props.style,\n      width: props.width\n    });\n  }, [props.breakAll, props.children, props.maxLines, scaleToFit, props.style, props.width]);\n  var dx = props.dx,\n    dy = props.dy,\n    angle = props.angle,\n    className = props.className,\n    breakAll = props.breakAll,\n    textProps = _objectWithoutProperties(props, _excluded2);\n  if (!isNumOrStr(propsX) || !isNumOrStr(propsY)) {\n    return null;\n  }\n  var x = propsX + (isNumber(dx) ? dx : 0);\n  var y = propsY + (isNumber(dy) ? dy : 0);\n  var startDy;\n  switch (verticalAnchor) {\n    case 'start':\n      startDy = reduceCSSCalc(\"calc(\".concat(capHeight, \")\"));\n      break;\n    case 'middle':\n      startDy = reduceCSSCalc(\"calc(\".concat((wordsByLines.length - 1) / 2, \" * -\").concat(lineHeight, \" + (\").concat(capHeight, \" / 2))\"));\n      break;\n    default:\n      startDy = reduceCSSCalc(\"calc(\".concat(wordsByLines.length - 1, \" * -\").concat(lineHeight, \")\"));\n      break;\n  }\n  var transforms = [];\n  if (scaleToFit) {\n    var lineWidth = wordsByLines[0].width;\n    var width = props.width;\n    transforms.push(\"scale(\".concat((isNumber(width) ? width / lineWidth : 1) / lineWidth, \")\"));\n  }\n  if (angle) {\n    transforms.push(\"rotate(\".concat(angle, \", \").concat(x, \", \").concat(y, \")\"));\n  }\n  if (transforms.length) {\n    textProps.transform = transforms.join(' ');\n  }\n  return /*#__PURE__*/React.createElement(\"text\", _extends({}, filterProps(textProps, true), {\n    x: x,\n    y: y,\n    className: clsx('recharts-text', className),\n    textAnchor: textAnchor,\n    fill: fill.includes('url') ? DEFAULT_FILL : fill\n  }), wordsByLines.map(function (line, index) {\n    var words = line.words.join(breakAll ? '' : ' ');\n    return /*#__PURE__*/React.createElement(\"tspan\", {\n      x: x,\n      dy: index === 0 ? startDy : lineHeight,\n      key: words\n    }, words);\n  }));\n};"]},"metadata":{},"sourceType":"module"}