{"ast":null,"code":"var _jsxFileName = \"/Users/prayugsigdel/Coding/Trades/src/components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport ChartFilter from \"./ChartFilter\";\nimport Card from \"./Card\";\nimport { Area, XAxis, YAxis, ResponsiveContainer, AreaChart, Tooltip } from \"recharts\";\nimport ThemeContext from \"../context/ThemeContext\";\nimport StockContext from \"../context/StockContext\";\nimport { fetchHistoricalData } from \"../utils/api/stock-api\";\nimport { createDate, convertDateToUnixTimestamp, convertUnixTimestampToDate } from \"../utils/helpers/date-helper\";\nimport { chartConfig } from \"../constants/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  _s();\n\n  const [filter, setFilter] = useState(\"1W\");\n  const {\n    darkMode\n  } = useContext(ThemeContext);\n  const {\n    stockSymbol\n  } = useContext(StockContext);\n  const [data, setData] = useState([]);\n\n  const formatData = data => {\n    return data.c.map((item, index) => {\n      return {\n        value: item.toFixed(2),\n        date: convertUnixTimestampToDate(data.t[index])\n      };\n    });\n  };\n\n  useEffect(() => {\n    const getDateRange = () => {\n      const {\n        days,\n        weeks,\n        months,\n        years\n      } = chartConfig[filter];\n      const endDate = new Date();\n      const startDate = createDate(endDate, -days, -weeks, -months, -years);\n      const startTimestampUnix = convertDateToUnixTimestamp(startDate);\n      const endTimestampUnix = convertDateToUnixTimestamp(endDate);\n      return {\n        startTimestampUnix,\n        endTimestampUnix\n      };\n    };\n\n    const updateChartData = async () => {\n      try {\n        const {\n          startTimestampUnix,\n          endTimestampUnix\n        } = getDateRange();\n        const resolution = chartConfig[filter].resolution;\n        const result = await fetchHistoricalData(stockSymbol, resolution, startTimestampUnix, endTimestampUnix);\n        setData(formatData(result));\n      } catch (error) {\n        setData([]);\n        console.log(error);\n      }\n    };\n\n    updateChartData();\n  }, [stockSymbol, filter]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"flex absolute top-2 right-2 z-40\",\n      children: Object.keys(chartConfig).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(ChartFilter, {\n          text: item,\n          active: filter === item,\n          onClick: () => {\n            setFilter(item);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      children: /*#__PURE__*/_jsxDEV(AreaChart, {\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: \"chartColor\",\n            x1: \"0\",\n            y1: \"0\",\n            x2: \"0\",\n            y2: \"1\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"5%\",\n              stopColor: darkMode ? \"#312e81\" : \"rgb(199 210 254)\",\n              stopOpacity: 0.8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"95%\",\n              stopColor: darkMode ? \"#312e81\" : \"rgb(199 210 254)\",\n              stopOpacity: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: darkMode ? {\n            backgroundColor: \"#111827\"\n          } : null,\n          itemStyle: darkMode ? {\n            color: \"#818cf8\"\n          } : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          type: \"monotone\",\n          dataKey: \"value\",\n          stroke: \"#312e81\",\n          fill: \"url(#chartColor)\",\n          fillOpacity: 1,\n          strokeWidth: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          domain: [\"dataMin\", \"dataMax\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"i+iNXJoiII7gvMgF1ECkc6oMSNI=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/prayugsigdel/Coding/Trades/src/components/Chart.js"],"names":["React","useContext","useEffect","useState","ChartFilter","Card","Area","XAxis","YAxis","ResponsiveContainer","AreaChart","Tooltip","ThemeContext","StockContext","fetchHistoricalData","createDate","convertDateToUnixTimestamp","convertUnixTimestampToDate","chartConfig","Chart","filter","setFilter","darkMode","stockSymbol","data","setData","formatData","c","map","item","index","value","toFixed","date","t","getDateRange","days","weeks","months","years","endDate","Date","startDate","startTimestampUnix","endTimestampUnix","updateChartData","resolution","result","error","console","log","Object","keys","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport ChartFilter from \"./ChartFilter\";\nimport Card from \"./Card\";\nimport {\n  Area,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  AreaChart,\n  Tooltip,\n} from \"recharts\";\nimport ThemeContext from \"../context/ThemeContext\";\nimport StockContext from \"../context/StockContext\";\nimport { fetchHistoricalData } from \"../utils/api/stock-api\";\nimport {\n  createDate,\n  convertDateToUnixTimestamp,\n  convertUnixTimestampToDate,\n} from \"../utils/helpers/date-helper\";\nimport { chartConfig } from \"../constants/config\";\n\nconst Chart = () => {\n  const [filter, setFilter] = useState(\"1W\");\n\n  const { darkMode } = useContext(ThemeContext);\n\n  const { stockSymbol } = useContext(StockContext);\n\n  const [data, setData] = useState([]);\n\n  const formatData = (data) => {\n    return data.c.map((item, index) => {\n      return {\n        value: item.toFixed(2),\n        date: convertUnixTimestampToDate(data.t[index]),\n      };\n    });\n  };\n\n  useEffect(() => {\n    const getDateRange = () => {\n      const { days, weeks, months, years } = chartConfig[filter];\n\n      const endDate = new Date();\n      const startDate = createDate(endDate, -days, -weeks, -months, -years);\n\n      const startTimestampUnix = convertDateToUnixTimestamp(startDate);\n      const endTimestampUnix = convertDateToUnixTimestamp(endDate);\n      return { startTimestampUnix, endTimestampUnix };\n    };\n\n    const updateChartData = async () => {\n      try {\n        const { startTimestampUnix, endTimestampUnix } = getDateRange();\n        const resolution = chartConfig[filter].resolution;\n        const result = await fetchHistoricalData(\n          stockSymbol,\n          resolution,\n          startTimestampUnix,\n          endTimestampUnix\n        );\n        setData(formatData(result));\n      } catch (error) {\n        setData([]);\n        console.log(error);\n      }\n    };\n\n    updateChartData();\n  }, [stockSymbol, filter]);\n\n  return (\n    <Card>\n      <ul className=\"flex absolute top-2 right-2 z-40\">\n        {Object.keys(chartConfig).map((item) => (\n          <li key={item}>\n            <ChartFilter\n              text={item}\n              active={filter === item}\n              onClick={() => {\n                setFilter(item);\n              }}\n            />\n          </li>\n        ))}\n      </ul>\n      <ResponsiveContainer>\n        <AreaChart data={data}>\n          <defs>\n            <linearGradient id=\"chartColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop\n                offset=\"5%\"\n                stopColor={darkMode ? \"#312e81\" : \"rgb(199 210 254)\"}\n                stopOpacity={0.8}\n              />\n              <stop\n                offset=\"95%\"\n                stopColor={darkMode ? \"#312e81\" : \"rgb(199 210 254)\"}\n                stopOpacity={0}\n              />\n            </linearGradient>\n          </defs>\n          <Tooltip\n            contentStyle={darkMode ? { backgroundColor: \"#111827\" } : null}\n            itemStyle={darkMode ? { color: \"#818cf8\" } : null}\n          />\n          <Area\n            type=\"monotone\"\n            dataKey=\"value\"\n            stroke=\"#312e81\"\n            fill=\"url(#chartColor)\"\n            fillOpacity={1}\n            strokeWidth={0.5}\n          />\n          <XAxis dataKey=\"date\" />\n          <YAxis domain={[\"dataMin\", \"dataMax\"]} />\n        </AreaChart>\n      </ResponsiveContainer>\n    </Card>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}