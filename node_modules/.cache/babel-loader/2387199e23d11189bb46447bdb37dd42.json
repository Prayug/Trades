{"ast":null,"code":"import { slice } from \"./array.js\";\nimport constant from \"./constant.js\";\nimport { bumpX, bumpY, bumpRadial } from \"./curve/bump.js\";\nimport { withPath } from \"./path.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nexport function link(curve) {\n  let source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null,\n      output = null,\n      path = withPath(link);\n\n  function link() {\n    let buffer;\n    const argv = slice.call(arguments);\n    const s = source.apply(this, argv);\n    const t = target.apply(this, argv);\n    if (context == null) output = curve(buffer = path());\n    output.lineStart();\n    argv[0] = s, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    argv[0] = t, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    output.lineEnd();\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  link.source = function (_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function (_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link) : context;\n  };\n\n  return link;\n}\nexport function linkHorizontal() {\n  return link(bumpX);\n}\nexport function linkVertical() {\n  return link(bumpY);\n}\nexport function linkRadial() {\n  const l = link(bumpRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}","map":{"version":3,"sources":["/Users/prayugsigdel/Coding/Trades/node_modules/d3-shape/src/link.js"],"names":["slice","constant","bumpX","bumpY","bumpRadial","withPath","x","pointX","y","pointY","linkSource","d","source","linkTarget","target","link","curve","context","output","path","buffer","argv","call","arguments","s","apply","t","lineStart","point","lineEnd","_","length","linkHorizontal","linkVertical","linkRadial","l","angle","radius"],"mappings":"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","sourcesContent":["import {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport {bumpX, bumpY, bumpRadial} from \"./curve/bump.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nexport function link(curve) {\n  let source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null,\n      output = null,\n      path = withPath(link);\n\n  function link() {\n    let buffer;\n    const argv = slice.call(arguments);\n    const s = source.apply(this, argv);\n    const t = target.apply(this, argv);\n    if (context == null) output = curve(buffer = path());\n    output.lineStart();\n    argv[0] = s, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    argv[0] = t, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    output.lineEnd();\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link) : context;\n  };\n\n  return link;\n}\n\nexport function linkHorizontal() {\n  return link(bumpX);\n}\n\nexport function linkVertical() {\n  return link(bumpY);\n}\n\nexport function linkRadial() {\n  const l = link(bumpRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n"]},"metadata":{},"sourceType":"module"}