{"ast":null,"code":"function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n\n  return t;\n}\n\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n\n  return e;\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nimport * as d3Scales from 'victory-vendor/d3-scale';\nimport { stack as shapeStack, stackOffsetExpand, stackOffsetNone, stackOffsetSilhouette, stackOffsetWiggle, stackOrderNone } from 'victory-vendor/d3-shape';\nimport max from 'lodash/max';\nimport min from 'lodash/min';\nimport isNil from 'lodash/isNil';\nimport isFunction from 'lodash/isFunction';\nimport isString from 'lodash/isString';\nimport get from 'lodash/get';\nimport flatMap from 'lodash/flatMap';\nimport isNan from 'lodash/isNaN';\nimport upperFirst from 'lodash/upperFirst';\nimport isEqual from 'lodash/isEqual';\nimport sortBy from 'lodash/sortBy';\nimport { getNiceTickValues, getTickValuesFixedDomain } from 'recharts-scale';\nimport { ErrorBar } from '../cartesian/ErrorBar';\nimport { findEntryInArray, getPercentValue, isNumber, isNumOrStr, mathSign, uniqueId } from './DataUtils';\nimport { filterProps, findAllByType, getDisplayName } from './ReactUtils'; // TODO: Cause of circular dependency. Needs refactor.\n// import { RadiusAxisProps, AngleAxisProps } from '../polar/types';\n\nimport { getLegendProps } from './getLegendProps'; // Exported for backwards compatibility\n\nexport { getLegendProps };\nexport function getValueByDataKey(obj, dataKey, defaultValue) {\n  if (isNil(obj) || isNil(dataKey)) {\n    return defaultValue;\n  }\n\n  if (isNumOrStr(dataKey)) {\n    return get(obj, dataKey, defaultValue);\n  }\n\n  if (isFunction(dataKey)) {\n    return dataKey(obj);\n  }\n\n  return defaultValue;\n}\n/**\n * Get domain of data by key.\n * @param  {Array}   data      The data displayed in the chart\n * @param  {String}  key       The unique key of a group of data\n * @param  {String}  type      The type of axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array} Domain of data\n */\n\nexport function getDomainOfDataByKey(data, key, type, filterNil) {\n  var flattenData = flatMap(data, function (entry) {\n    return getValueByDataKey(entry, key);\n  });\n\n  if (type === 'number') {\n    // @ts-expect-error parseFloat type only accepts strings\n    var domain = flattenData.filter(function (entry) {\n      return isNumber(entry) || parseFloat(entry);\n    });\n    return domain.length ? [min(domain), max(domain)] : [Infinity, -Infinity];\n  }\n\n  var validateData = filterNil ? flattenData.filter(function (entry) {\n    return !isNil(entry);\n  }) : flattenData; // Supports x-axis of Date type\n\n  return validateData.map(function (entry) {\n    return isNumOrStr(entry) || entry instanceof Date ? entry : '';\n  });\n}\nexport var calculateActiveTickIndex = function calculateActiveTickIndex(coordinate) {\n  var _ticks$length;\n\n  var ticks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var unsortedTicks = arguments.length > 2 ? arguments[2] : undefined;\n  var axis = arguments.length > 3 ? arguments[3] : undefined;\n  var index = -1;\n  var len = (_ticks$length = ticks === null || ticks === void 0 ? void 0 : ticks.length) !== null && _ticks$length !== void 0 ? _ticks$length : 0; // if there are 1 or less ticks ticks then the active tick is at index 0\n\n  if (len <= 1) {\n    return 0;\n  }\n\n  if (axis && axis.axisType === 'angleAxis' && Math.abs(Math.abs(axis.range[1] - axis.range[0]) - 360) <= 1e-6) {\n    var range = axis.range; // ticks are distributed in a circle\n\n    for (var i = 0; i < len; i++) {\n      var before = i > 0 ? unsortedTicks[i - 1].coordinate : unsortedTicks[len - 1].coordinate;\n      var cur = unsortedTicks[i].coordinate;\n      var after = i >= len - 1 ? unsortedTicks[0].coordinate : unsortedTicks[i + 1].coordinate;\n      var sameDirectionCoord = void 0;\n\n      if (mathSign(cur - before) !== mathSign(after - cur)) {\n        var diffInterval = [];\n\n        if (mathSign(after - cur) === mathSign(range[1] - range[0])) {\n          sameDirectionCoord = after;\n          var curInRange = cur + range[1] - range[0];\n          diffInterval[0] = Math.min(curInRange, (curInRange + before) / 2);\n          diffInterval[1] = Math.max(curInRange, (curInRange + before) / 2);\n        } else {\n          sameDirectionCoord = before;\n          var afterInRange = after + range[1] - range[0];\n          diffInterval[0] = Math.min(cur, (afterInRange + cur) / 2);\n          diffInterval[1] = Math.max(cur, (afterInRange + cur) / 2);\n        }\n\n        var sameInterval = [Math.min(cur, (sameDirectionCoord + cur) / 2), Math.max(cur, (sameDirectionCoord + cur) / 2)];\n\n        if (coordinate > sameInterval[0] && coordinate <= sameInterval[1] || coordinate >= diffInterval[0] && coordinate <= diffInterval[1]) {\n          index = unsortedTicks[i].index;\n          break;\n        }\n      } else {\n        var minValue = Math.min(before, after);\n        var maxValue = Math.max(before, after);\n\n        if (coordinate > (minValue + cur) / 2 && coordinate <= (maxValue + cur) / 2) {\n          index = unsortedTicks[i].index;\n          break;\n        }\n      }\n    }\n  } else {\n    // ticks are distributed in a single direction\n    for (var _i = 0; _i < len; _i++) {\n      if (_i === 0 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i > 0 && _i < len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i === len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2) {\n        index = ticks[_i].index;\n        break;\n      }\n    }\n  }\n\n  return index;\n};\n/**\n * Get the main color of each graphic item\n * @param  {ReactElement} item A graphic item\n * @return {String}            Color\n */\n\nexport var getMainColorOfGraphicItem = function getMainColorOfGraphicItem(item) {\n  var _ref = item,\n      displayName = _ref.type.displayName; // TODO: check if displayName is valid.\n\n  var _item$props = item.props,\n      stroke = _item$props.stroke,\n      fill = _item$props.fill;\n  var result;\n\n  switch (displayName) {\n    case 'Line':\n      result = stroke;\n      break;\n\n    case 'Area':\n    case 'Radar':\n      result = stroke && stroke !== 'none' ? stroke : fill;\n      break;\n\n    default:\n      result = fill;\n      break;\n  }\n\n  return result;\n};\n/**\n * Calculate the size of all groups for stacked bar graph\n * @param  {Object} stackGroups The items grouped by axisId and stackId\n * @return {Object} The size of all groups\n */\n\nexport var getBarSizeList = function getBarSizeList(_ref2) {\n  var globalSize = _ref2.barSize,\n      _ref2$stackGroups = _ref2.stackGroups,\n      stackGroups = _ref2$stackGroups === void 0 ? {} : _ref2$stackGroups;\n\n  if (!stackGroups) {\n    return {};\n  }\n\n  var result = {};\n  var numericAxisIds = Object.keys(stackGroups);\n\n  for (var i = 0, len = numericAxisIds.length; i < len; i++) {\n    var sgs = stackGroups[numericAxisIds[i]].stackGroups;\n    var stackIds = Object.keys(sgs);\n\n    for (var j = 0, sLen = stackIds.length; j < sLen; j++) {\n      var _sgs$stackIds$j = sgs[stackIds[j]],\n          items = _sgs$stackIds$j.items,\n          cateAxisId = _sgs$stackIds$j.cateAxisId;\n      var barItems = items.filter(function (item) {\n        return getDisplayName(item.type).indexOf('Bar') >= 0;\n      });\n\n      if (barItems && barItems.length) {\n        var selfSize = barItems[0].props.barSize;\n        var cateId = barItems[0].props[cateAxisId];\n\n        if (!result[cateId]) {\n          result[cateId] = [];\n        }\n\n        result[cateId].push({\n          item: barItems[0],\n          stackList: barItems.slice(1),\n          barSize: isNil(selfSize) ? globalSize : selfSize\n        });\n      }\n    }\n  }\n\n  return result;\n};\n/**\n * Calculate the size of each bar and offset between start of band and the bar\n *\n * @param  {number} bandSize is the size of area where bars can render\n * @param  {number | string} barGap is the gap size, as a percentage of `bandSize`.\n *                                  Can be defined as number or percent string\n * @param  {number | string} barCategoryGap is the gap size, as a percentage of `bandSize`.\n *                                  Can be defined as number or percent string\n * @param  {Array<object>} sizeList Sizes of all groups\n * @param  {number} maxBarSize The maximum size of each bar\n * @return {Array<object>} The size and offset of each bar\n */\n\nexport var getBarPosition = function getBarPosition(_ref3) {\n  var barGap = _ref3.barGap,\n      barCategoryGap = _ref3.barCategoryGap,\n      bandSize = _ref3.bandSize,\n      _ref3$sizeList = _ref3.sizeList,\n      sizeList = _ref3$sizeList === void 0 ? [] : _ref3$sizeList,\n      maxBarSize = _ref3.maxBarSize;\n  var len = sizeList.length;\n  if (len < 1) return null;\n  var realBarGap = getPercentValue(barGap, bandSize, 0, true);\n  var result;\n  var initialValue = []; // whether or not is barSize setted by user\n\n  if (sizeList[0].barSize === +sizeList[0].barSize) {\n    var useFull = false;\n    var fullBarSize = bandSize / len; // @ts-expect-error the type check above does not check for type number explicitly\n\n    var sum = sizeList.reduce(function (res, entry) {\n      return res + entry.barSize || 0;\n    }, 0);\n    sum += (len - 1) * realBarGap;\n\n    if (sum >= bandSize) {\n      sum -= (len - 1) * realBarGap;\n      realBarGap = 0;\n    }\n\n    if (sum >= bandSize && fullBarSize > 0) {\n      useFull = true;\n      fullBarSize *= 0.9;\n      sum = len * fullBarSize;\n    }\n\n    var offset = (bandSize - sum) / 2 >> 0;\n    var prev = {\n      offset: offset - realBarGap,\n      size: 0\n    };\n    result = sizeList.reduce(function (res, entry) {\n      var newPosition = {\n        item: entry.item,\n        position: {\n          offset: prev.offset + prev.size + realBarGap,\n          // @ts-expect-error the type check above does not check for type number explicitly\n          size: useFull ? fullBarSize : entry.barSize\n        }\n      };\n      var newRes = [].concat(_toConsumableArray(res), [newPosition]);\n      prev = newRes[newRes.length - 1].position;\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: prev\n          });\n        });\n      }\n\n      return newRes;\n    }, initialValue);\n  } else {\n    var _offset = getPercentValue(barCategoryGap, bandSize, 0, true);\n\n    if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {\n      realBarGap = 0;\n    }\n\n    var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;\n\n    if (originalSize > 1) {\n      originalSize >>= 0;\n    }\n\n    var size = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;\n    result = sizeList.reduce(function (res, entry, i) {\n      var newRes = [].concat(_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,\n          size: size\n        }\n      }]);\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: newRes[newRes.length - 1].position\n          });\n        });\n      }\n\n      return newRes;\n    }, initialValue);\n  }\n\n  return result;\n};\nexport var appendOffsetOfLegend = function appendOffsetOfLegend(offset, _unused, props, legendBox) {\n  var children = props.children,\n      width = props.width,\n      margin = props.margin;\n  var legendWidth = width - (margin.left || 0) - (margin.right || 0);\n  var legendProps = getLegendProps({\n    children: children,\n    legendWidth: legendWidth\n  });\n\n  if (legendProps) {\n    var _ref4 = legendBox || {},\n        boxWidth = _ref4.width,\n        boxHeight = _ref4.height;\n\n    var align = legendProps.align,\n        verticalAlign = legendProps.verticalAlign,\n        layout = legendProps.layout;\n\n    if ((layout === 'vertical' || layout === 'horizontal' && verticalAlign === 'middle') && align !== 'center' && isNumber(offset[align])) {\n      return _objectSpread(_objectSpread({}, offset), {}, _defineProperty({}, align, offset[align] + (boxWidth || 0)));\n    }\n\n    if ((layout === 'horizontal' || layout === 'vertical' && align === 'center') && verticalAlign !== 'middle' && isNumber(offset[verticalAlign])) {\n      return _objectSpread(_objectSpread({}, offset), {}, _defineProperty({}, verticalAlign, offset[verticalAlign] + (boxHeight || 0)));\n    }\n  }\n\n  return offset;\n};\n\nvar isErrorBarRelevantForAxis = function isErrorBarRelevantForAxis(layout, axisType, direction) {\n  if (isNil(axisType)) {\n    return true;\n  }\n\n  if (layout === 'horizontal') {\n    return axisType === 'yAxis';\n  }\n\n  if (layout === 'vertical') {\n    return axisType === 'xAxis';\n  }\n\n  if (direction === 'x') {\n    return axisType === 'xAxis';\n  }\n\n  if (direction === 'y') {\n    return axisType === 'yAxis';\n  }\n\n  return true;\n};\n\nexport var getDomainOfErrorBars = function getDomainOfErrorBars(data, item, dataKey, layout, axisType) {\n  var children = item.props.children;\n  var errorBars = findAllByType(children, ErrorBar).filter(function (errorBarChild) {\n    return isErrorBarRelevantForAxis(layout, axisType, errorBarChild.props.direction);\n  });\n\n  if (errorBars && errorBars.length) {\n    var keys = errorBars.map(function (errorBarChild) {\n      return errorBarChild.props.dataKey;\n    });\n    return data.reduce(function (result, entry) {\n      var entryValue = getValueByDataKey(entry, dataKey, 0);\n      var mainValue = Array.isArray(entryValue) ? [min(entryValue), max(entryValue)] : [entryValue, entryValue];\n      var errorDomain = keys.reduce(function (prevErrorArr, k) {\n        var errorValue = getValueByDataKey(entry, k, 0);\n        var lowerValue = mainValue[0] - Math.abs(Array.isArray(errorValue) ? errorValue[0] : errorValue);\n        var upperValue = mainValue[1] + Math.abs(Array.isArray(errorValue) ? errorValue[1] : errorValue);\n        return [Math.min(lowerValue, prevErrorArr[0]), Math.max(upperValue, prevErrorArr[1])];\n      }, [Infinity, -Infinity]);\n      return [Math.min(errorDomain[0], result[0]), Math.max(errorDomain[1], result[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\nexport var parseErrorBarsOfAxis = function parseErrorBarsOfAxis(data, items, dataKey, axisType, layout) {\n  var domains = items.map(function (item) {\n    return getDomainOfErrorBars(data, item, dataKey, layout, axisType);\n  }).filter(function (entry) {\n    return !isNil(entry);\n  });\n\n  if (domains && domains.length) {\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\n/**\n * Get domain of data by the configuration of item element\n * @param  {Array}   data      The data displayed in the chart\n * @param  {Array}   items     The instances of item\n * @param  {String}  type      The type of axis, number - Number Axis, category - Category Axis\n * @param  {LayoutType} layout The type of layout\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array}        Domain\n */\n\nexport var getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis(data, items, type, layout, filterNil) {\n  var domains = items.map(function (item) {\n    var dataKey = item.props.dataKey;\n\n    if (type === 'number' && dataKey) {\n      return getDomainOfErrorBars(data, item, dataKey, layout) || getDomainOfDataByKey(data, dataKey, type, filterNil);\n    }\n\n    return getDomainOfDataByKey(data, dataKey, type, filterNil);\n  });\n\n  if (type === 'number') {\n    // Calculate the domain of number axis\n    return domains.reduce( // @ts-expect-error if (type === number) means that the domain is numerical type\n    // - but this link is missing in the type definition\n    function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  var tag = {}; // Get the union set of category axis\n\n  return domains.reduce(function (result, entry) {\n    for (var i = 0, len = entry.length; i < len; i++) {\n      // @ts-expect-error Date cannot index an object\n      if (!tag[entry[i]]) {\n        // @ts-expect-error Date cannot index an object\n        tag[entry[i]] = true; // @ts-expect-error Date cannot index an object\n\n        result.push(entry[i]);\n      }\n    }\n\n    return result;\n  }, []);\n};\nexport var isCategoricalAxis = function isCategoricalAxis(layout, axisType) {\n  return layout === 'horizontal' && axisType === 'xAxis' || layout === 'vertical' && axisType === 'yAxis' || layout === 'centric' && axisType === 'angleAxis' || layout === 'radial' && axisType === 'radiusAxis';\n};\n/**\n * Calculate the Coordinates of grid\n * @param  {Array} ticks           The ticks in axis\n * @param {Number} minValue        The minimun value of axis\n * @param {Number} maxValue        The maximun value of axis\n * @param {boolean} syncWithTicks  Synchronize grid lines with ticks or not\n * @return {Array}                 Coordinates\n */\n\nexport var getCoordinatesOfGrid = function getCoordinatesOfGrid(ticks, minValue, maxValue, syncWithTicks) {\n  if (syncWithTicks) {\n    return ticks.map(function (entry) {\n      return entry.coordinate;\n    });\n  }\n\n  var hasMin, hasMax;\n  var values = ticks.map(function (entry) {\n    if (entry.coordinate === minValue) {\n      hasMin = true;\n    }\n\n    if (entry.coordinate === maxValue) {\n      hasMax = true;\n    }\n\n    return entry.coordinate;\n  });\n\n  if (!hasMin) {\n    values.push(minValue);\n  }\n\n  if (!hasMax) {\n    values.push(maxValue);\n  }\n\n  return values;\n};\n/**\n * Get the ticks of an axis\n * @param  {Object}  axis The configuration of an axis\n * @param {Boolean} isGrid Whether or not are the ticks in grid\n * @param {Boolean} isAll Return the ticks of all the points or not\n * @return {Array}  Ticks\n */\n\nexport var getTicksOfAxis = function getTicksOfAxis(axis, isGrid, isAll) {\n  if (!axis) return null;\n  var scale = axis.scale;\n  var duplicateDomain = axis.duplicateDomain,\n      type = axis.type,\n      range = axis.range;\n  var offsetForBand = axis.realScaleType === 'scaleBand' ? scale.bandwidth() / 2 : 2;\n  var offset = (isGrid || isAll) && type === 'category' && scale.bandwidth ? scale.bandwidth() / offsetForBand : 0;\n  offset = axis.axisType === 'angleAxis' && (range === null || range === void 0 ? void 0 : range.length) >= 2 ? mathSign(range[0] - range[1]) * 2 * offset : offset; // The ticks set by user should only affect the ticks adjacent to axis line\n\n  if (isGrid && (axis.ticks || axis.niceTicks)) {\n    var result = (axis.ticks || axis.niceTicks).map(function (entry) {\n      var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;\n      return {\n        // If the scaleContent is not a number, the coordinate will be NaN.\n        // That could be the case for example with a PointScale and a string as domain.\n        coordinate: scale(scaleContent) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n    return result.filter(function (row) {\n      return !isNan(row.coordinate);\n    });\n  } // When axis is a categorial axis, but the type of axis is number or the scale of axis is not \"auto\"\n\n\n  if (axis.isCategorical && axis.categoricalDomain) {\n    return axis.categoricalDomain.map(function (entry, index) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        index: index,\n        offset: offset\n      };\n    });\n  }\n\n  if (scale.ticks && !isAll) {\n    return scale.ticks(axis.tickCount).map(function (entry) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  } // When axis has duplicated text, serial numbers are used to generate scale\n\n\n  return scale.domain().map(function (entry, index) {\n    return {\n      coordinate: scale(entry) + offset,\n      value: duplicateDomain ? duplicateDomain[entry] : entry,\n      index: index,\n      offset: offset\n    };\n  });\n};\n/**\n * combine the handlers\n * @param  {Function} defaultHandler Internal private handler\n * @param  {Function} childHandler Handler function specified in child component\n * @return {Function}                The combined handler\n */\n\nvar handlerWeakMap = new WeakMap();\nexport var combineEventHandlers = function combineEventHandlers(defaultHandler, childHandler) {\n  if (typeof childHandler !== 'function') {\n    return defaultHandler;\n  }\n\n  if (!handlerWeakMap.has(defaultHandler)) {\n    handlerWeakMap.set(defaultHandler, new WeakMap());\n  }\n\n  var childWeakMap = handlerWeakMap.get(defaultHandler);\n\n  if (childWeakMap.has(childHandler)) {\n    return childWeakMap.get(childHandler);\n  }\n\n  var combineHandler = function combineHandler() {\n    defaultHandler.apply(void 0, arguments);\n    childHandler.apply(void 0, arguments);\n  };\n\n  childWeakMap.set(childHandler, combineHandler);\n  return combineHandler;\n};\n/**\n * Parse the scale function of axis\n * @param  {Object}   axis          The option of axis\n * @param  {String}   chartType     The displayName of chart\n * @param  {Boolean}  hasBar        if it has a bar\n * @return {object}               The scale function and resolved name\n */\n\nexport var parseScale = function parseScale(axis, chartType, hasBar) {\n  var scale = axis.scale,\n      type = axis.type,\n      layout = axis.layout,\n      axisType = axis.axisType;\n\n  if (scale === 'auto') {\n    if (layout === 'radial' && axisType === 'radiusAxis') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n\n    if (layout === 'radial' && axisType === 'angleAxis') {\n      return {\n        scale: d3Scales.scaleLinear(),\n        realScaleType: 'linear'\n      };\n    }\n\n    if (type === 'category' && chartType && (chartType.indexOf('LineChart') >= 0 || chartType.indexOf('AreaChart') >= 0 || chartType.indexOf('ComposedChart') >= 0 && !hasBar)) {\n      return {\n        scale: d3Scales.scalePoint(),\n        realScaleType: 'point'\n      };\n    }\n\n    if (type === 'category') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n\n    return {\n      scale: d3Scales.scaleLinear(),\n      realScaleType: 'linear'\n    };\n  }\n\n  if (isString(scale)) {\n    var name = \"scale\".concat(upperFirst(scale));\n    return {\n      scale: (d3Scales[name] || d3Scales.scalePoint)(),\n      realScaleType: d3Scales[name] ? name : 'point'\n    };\n  }\n\n  return isFunction(scale) ? {\n    scale: scale\n  } : {\n    scale: d3Scales.scalePoint(),\n    realScaleType: 'point'\n  };\n};\nvar EPS = 1e-4;\nexport var checkDomainOfScale = function checkDomainOfScale(scale) {\n  var domain = scale.domain();\n\n  if (!domain || domain.length <= 2) {\n    return;\n  }\n\n  var len = domain.length;\n  var range = scale.range();\n  var minValue = Math.min(range[0], range[1]) - EPS;\n  var maxValue = Math.max(range[0], range[1]) + EPS;\n  var first = scale(domain[0]);\n  var last = scale(domain[len - 1]);\n\n  if (first < minValue || first > maxValue || last < minValue || last > maxValue) {\n    scale.domain([domain[0], domain[len - 1]]);\n  }\n};\nexport var findPositionOfBar = function findPositionOfBar(barPosition, child) {\n  if (!barPosition) {\n    return null;\n  }\n\n  for (var i = 0, len = barPosition.length; i < len; i++) {\n    if (barPosition[i].item === child) {\n      return barPosition[i].position;\n    }\n  }\n\n  return null;\n};\n/**\n * Both value and domain are tuples of two numbers\n * - but the type stays as array of numbers until we have better support in rest of the app\n * @param {Array} value input that will be truncated\n * @param {Array} domain boundaries\n * @returns {Array} tuple of two numbers\n */\n\nexport var truncateByDomain = function truncateByDomain(value, domain) {\n  if (!domain || domain.length !== 2 || !isNumber(domain[0]) || !isNumber(domain[1])) {\n    return value;\n  }\n\n  var minValue = Math.min(domain[0], domain[1]);\n  var maxValue = Math.max(domain[0], domain[1]);\n  var result = [value[0], value[1]];\n\n  if (!isNumber(value[0]) || value[0] < minValue) {\n    result[0] = minValue;\n  }\n\n  if (!isNumber(value[1]) || value[1] > maxValue) {\n    result[1] = maxValue;\n  }\n\n  if (result[0] > maxValue) {\n    result[0] = maxValue;\n  }\n\n  if (result[1] < minValue) {\n    result[1] = minValue;\n  }\n\n  return result;\n};\n/**\n * Stacks all positive numbers above zero and all negative numbers below zero.\n *\n * If all values in the series are positive then this behaves the same as 'none' stacker.\n *\n * @param {Array} series from d3-shape Stack\n * @return {Array} series with applied offset\n */\n\nexport var offsetSign = function offsetSign(series) {\n  var n = series.length;\n\n  if (n <= 0) {\n    return;\n  }\n\n  for (var j = 0, m = series[0].length; j < m; ++j) {\n    var positive = 0;\n    var negative = 0;\n\n    for (var i = 0; i < n; ++i) {\n      var value = isNan(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n      /* eslint-disable prefer-destructuring, no-param-reassign */\n\n      if (value >= 0) {\n        series[i][j][0] = positive;\n        series[i][j][1] = positive + value;\n        positive = series[i][j][1];\n      } else {\n        series[i][j][0] = negative;\n        series[i][j][1] = negative + value;\n        negative = series[i][j][1];\n      }\n      /* eslint-enable prefer-destructuring, no-param-reassign */\n\n    }\n  }\n};\n/**\n * Replaces all negative values with zero when stacking data.\n *\n * If all values in the series are positive then this behaves the same as 'none' stacker.\n *\n * @param {Array} series from d3-shape Stack\n * @return {Array} series with applied offset\n */\n\nexport var offsetPositive = function offsetPositive(series) {\n  var n = series.length;\n\n  if (n <= 0) {\n    return;\n  }\n\n  for (var j = 0, m = series[0].length; j < m; ++j) {\n    var positive = 0;\n\n    for (var i = 0; i < n; ++i) {\n      var value = isNan(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n      /* eslint-disable prefer-destructuring, no-param-reassign */\n\n      if (value >= 0) {\n        series[i][j][0] = positive;\n        series[i][j][1] = positive + value;\n        positive = series[i][j][1];\n      } else {\n        series[i][j][0] = 0;\n        series[i][j][1] = 0;\n      }\n      /* eslint-enable prefer-destructuring, no-param-reassign */\n\n    }\n  }\n};\n/**\n * Function type to compute offset for stacked data.\n *\n * d3-shape has something fishy going on with its types.\n * In @definitelytyped/d3-shape, this function (the offset accessor) is typed as Series<> => void.\n * However! When I actually open the storybook I can see that the offset accessor actually receives Array<Series<>>.\n * The same I can see in the source code itself:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/66042\n * That one unfortunately has no types but we can tell it passes three-dimensional array.\n *\n * Which leads me to believe that definitelytyped is wrong on this one.\n * There's open discussion on this topic without much attention:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/66042\n */\n\nvar STACK_OFFSET_MAP = {\n  sign: offsetSign,\n  // @ts-expect-error definitelytyped types are incorrect\n  expand: stackOffsetExpand,\n  // @ts-expect-error definitelytyped types are incorrect\n  none: stackOffsetNone,\n  // @ts-expect-error definitelytyped types are incorrect\n  silhouette: stackOffsetSilhouette,\n  // @ts-expect-error definitelytyped types are incorrect\n  wiggle: stackOffsetWiggle,\n  positive: offsetPositive\n};\nexport var getStackedData = function getStackedData(data, stackItems, offsetType) {\n  var dataKeys = stackItems.map(function (item) {\n    return item.props.dataKey;\n  });\n  var offsetAccessor = STACK_OFFSET_MAP[offsetType];\n  var stack = shapeStack() // @ts-expect-error stack.keys type wants an array of strings, but we provide array of DataKeys\n  .keys(dataKeys).value(function (d, key) {\n    return +getValueByDataKey(d, key, 0);\n  }).order(stackOrderNone) // @ts-expect-error definitelytyped types are incorrect\n  .offset(offsetAccessor);\n  return stack(data);\n};\nexport var getStackGroupsByAxisId = function getStackGroupsByAxisId(data, _items, numericAxisId, cateAxisId, offsetType, reverseStackOrder) {\n  if (!data) {\n    return null;\n  } // reversing items to affect render order (for layering)\n\n\n  var items = reverseStackOrder ? _items.reverse() : _items;\n  var parentStackGroupsInitialValue = {};\n  var stackGroups = items.reduce(function (result, item) {\n    var _item$props2 = item.props,\n        stackId = _item$props2.stackId,\n        hide = _item$props2.hide;\n\n    if (hide) {\n      return result;\n    }\n\n    var axisId = item.props[numericAxisId];\n    var parentGroup = result[axisId] || {\n      hasStack: false,\n      stackGroups: {}\n    };\n\n    if (isNumOrStr(stackId)) {\n      var childGroup = parentGroup.stackGroups[stackId] || {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: []\n      };\n      childGroup.items.push(item);\n      parentGroup.hasStack = true;\n      parentGroup.stackGroups[stackId] = childGroup;\n    } else {\n      parentGroup.stackGroups[uniqueId('_stackId_')] = {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: [item]\n      };\n    }\n\n    return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, parentGroup));\n  }, parentStackGroupsInitialValue);\n  var axisStackGroupsInitialValue = {};\n  return Object.keys(stackGroups).reduce(function (result, axisId) {\n    var group = stackGroups[axisId];\n\n    if (group.hasStack) {\n      var stackGroupsInitialValue = {};\n      group.stackGroups = Object.keys(group.stackGroups).reduce(function (res, stackId) {\n        var g = group.stackGroups[stackId];\n        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, stackId, {\n          numericAxisId: numericAxisId,\n          cateAxisId: cateAxisId,\n          items: g.items,\n          stackedData: getStackedData(data, g.items, offsetType)\n        }));\n      }, stackGroupsInitialValue);\n    }\n\n    return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, group));\n  }, axisStackGroupsInitialValue);\n};\n/**\n * Configure the scale function of axis\n * @param {Object} scale The scale function\n * @param {Object} opts  The configuration of axis\n * @return {Object}      null\n */\n\nexport var getTicksOfScale = function getTicksOfScale(scale, opts) {\n  var realScaleType = opts.realScaleType,\n      type = opts.type,\n      tickCount = opts.tickCount,\n      originalDomain = opts.originalDomain,\n      allowDecimals = opts.allowDecimals;\n  var scaleType = realScaleType || opts.scale;\n\n  if (scaleType !== 'auto' && scaleType !== 'linear') {\n    return null;\n  }\n\n  if (tickCount && type === 'number' && originalDomain && (originalDomain[0] === 'auto' || originalDomain[1] === 'auto')) {\n    // Calculate the ticks by the number of grid when the axis is a number axis\n    var domain = scale.domain();\n\n    if (!domain.length) {\n      return null;\n    }\n\n    var tickValues = getNiceTickValues(domain, tickCount, allowDecimals);\n    scale.domain([min(tickValues), max(tickValues)]);\n    return {\n      niceTicks: tickValues\n    };\n  }\n\n  if (tickCount && type === 'number') {\n    var _domain = scale.domain();\n\n    var _tickValues = getTickValuesFixedDomain(_domain, tickCount, allowDecimals);\n\n    return {\n      niceTicks: _tickValues\n    };\n  }\n\n  return null;\n};\nexport var getCateCoordinateOfLine = function getCateCoordinateOfLine(_ref5) {\n  var axis = _ref5.axis,\n      ticks = _ref5.ticks,\n      bandSize = _ref5.bandSize,\n      entry = _ref5.entry,\n      index = _ref5.index,\n      dataKey = _ref5.dataKey;\n\n  if (axis.type === 'category') {\n    // find coordinate of category axis by the value of category\n    if (!axis.allowDuplicatedCategory && axis.dataKey && !isNil(entry[axis.dataKey])) {\n      var matchedTick = findEntryInArray(ticks, 'value', entry[axis.dataKey]);\n\n      if (matchedTick) {\n        return matchedTick.coordinate + bandSize / 2;\n      }\n    }\n\n    return ticks[index] ? ticks[index].coordinate + bandSize / 2 : null;\n  }\n\n  var value = getValueByDataKey(entry, !isNil(dataKey) ? dataKey : axis.dataKey);\n  return !isNil(value) ? axis.scale(value) : null;\n};\nexport var getCateCoordinateOfBar = function getCateCoordinateOfBar(_ref6) {\n  var axis = _ref6.axis,\n      ticks = _ref6.ticks,\n      offset = _ref6.offset,\n      bandSize = _ref6.bandSize,\n      entry = _ref6.entry,\n      index = _ref6.index;\n\n  if (axis.type === 'category') {\n    return ticks[index] ? ticks[index].coordinate + offset : null;\n  }\n\n  var value = getValueByDataKey(entry, axis.dataKey, axis.domain[index]);\n  return !isNil(value) ? axis.scale(value) - bandSize / 2 + offset : null;\n};\nexport var getBaseValueOfBar = function getBaseValueOfBar(_ref7) {\n  var numericAxis = _ref7.numericAxis;\n  var domain = numericAxis.scale.domain();\n\n  if (numericAxis.type === 'number') {\n    var minValue = Math.min(domain[0], domain[1]);\n    var maxValue = Math.max(domain[0], domain[1]);\n\n    if (minValue <= 0 && maxValue >= 0) {\n      return 0;\n    }\n\n    if (maxValue < 0) {\n      return maxValue;\n    }\n\n    return minValue;\n  }\n\n  return domain[0];\n};\nexport var getStackedDataOfItem = function getStackedDataOfItem(item, stackGroups) {\n  var stackId = item.props.stackId;\n\n  if (isNumOrStr(stackId)) {\n    var group = stackGroups[stackId];\n\n    if (group) {\n      var itemIndex = group.items.indexOf(item);\n      return itemIndex >= 0 ? group.stackedData[itemIndex] : null;\n    }\n  }\n\n  return null;\n};\n\nvar getDomainOfSingle = function getDomainOfSingle(data) {\n  return data.reduce(function (result, entry) {\n    return [min(entry.concat([result[0]]).filter(isNumber)), max(entry.concat([result[1]]).filter(isNumber))];\n  }, [Infinity, -Infinity]);\n};\n\nexport var getDomainOfStackGroups = function getDomainOfStackGroups(stackGroups, startIndex, endIndex) {\n  return Object.keys(stackGroups).reduce(function (result, stackId) {\n    var group = stackGroups[stackId];\n    var stackedData = group.stackedData;\n    var domain = stackedData.reduce(function (res, entry) {\n      var s = getDomainOfSingle(entry.slice(startIndex, endIndex + 1));\n      return [Math.min(res[0], s[0]), Math.max(res[1], s[1])];\n    }, [Infinity, -Infinity]);\n    return [Math.min(domain[0], result[0]), Math.max(domain[1], result[1])];\n  }, [Infinity, -Infinity]).map(function (result) {\n    return result === Infinity || result === -Infinity ? 0 : result;\n  });\n};\nexport var MIN_VALUE_REG = /^dataMin[\\s]*-[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexport var MAX_VALUE_REG = /^dataMax[\\s]*\\+[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexport var parseSpecifiedDomain = function parseSpecifiedDomain(specifiedDomain, dataDomain, allowDataOverflow) {\n  if (isFunction(specifiedDomain)) {\n    return specifiedDomain(dataDomain, allowDataOverflow);\n  }\n\n  if (!Array.isArray(specifiedDomain)) {\n    return dataDomain;\n  }\n\n  var domain = [];\n  /* eslint-disable prefer-destructuring */\n\n  if (isNumber(specifiedDomain[0])) {\n    domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);\n  } else if (MIN_VALUE_REG.test(specifiedDomain[0])) {\n    var value = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];\n    domain[0] = dataDomain[0] - value;\n  } else if (isFunction(specifiedDomain[0])) {\n    domain[0] = specifiedDomain[0](dataDomain[0]);\n  } else {\n    domain[0] = dataDomain[0];\n  }\n\n  if (isNumber(specifiedDomain[1])) {\n    domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);\n  } else if (MAX_VALUE_REG.test(specifiedDomain[1])) {\n    var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];\n\n    domain[1] = dataDomain[1] + _value;\n  } else if (isFunction(specifiedDomain[1])) {\n    domain[1] = specifiedDomain[1](dataDomain[1]);\n  } else {\n    domain[1] = dataDomain[1];\n  }\n  /* eslint-enable prefer-destructuring */\n\n\n  return domain;\n};\n/**\n * Calculate the size between two category\n * @param  {Object} axis  The options of axis\n * @param  {Array}  ticks The ticks of axis\n * @param  {Boolean} isBar if items in axis are bars\n * @return {Number} Size\n */\n\nexport var getBandSizeOfAxis = function getBandSizeOfAxis(axis, ticks, isBar) {\n  // @ts-expect-error we need to rethink scale type\n  if (axis && axis.scale && axis.scale.bandwidth) {\n    // @ts-expect-error we need to rethink scale type\n    var bandWidth = axis.scale.bandwidth();\n\n    if (!isBar || bandWidth > 0) {\n      return bandWidth;\n    }\n  }\n\n  if (axis && ticks && ticks.length >= 2) {\n    var orderedTicks = sortBy(ticks, function (o) {\n      return o.coordinate;\n    });\n    var bandSize = Infinity;\n\n    for (var i = 1, len = orderedTicks.length; i < len; i++) {\n      var cur = orderedTicks[i];\n      var prev = orderedTicks[i - 1];\n      bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);\n    }\n\n    return bandSize === Infinity ? 0 : bandSize;\n  }\n\n  return isBar ? undefined : 0;\n};\n/**\n * parse the domain of a category axis when a domain is specified\n * @param   {Array}        specifiedDomain  The domain specified by users\n * @param   {Array}        calculatedDomain The domain calculated by dateKey\n * @param   {ReactElement} axisChild        The axis ReactElement\n * @returns {Array}        domains\n */\n\nexport var parseDomainOfCategoryAxis = function parseDomainOfCategoryAxis(specifiedDomain, calculatedDomain, axisChild) {\n  if (!specifiedDomain || !specifiedDomain.length) {\n    return calculatedDomain;\n  }\n\n  if (isEqual(specifiedDomain, get(axisChild, 'type.defaultProps.domain'))) {\n    return calculatedDomain;\n  }\n\n  return specifiedDomain;\n};\nexport var getTooltipItem = function getTooltipItem(graphicalItem, payload) {\n  var _graphicalItem$props = graphicalItem.props,\n      dataKey = _graphicalItem$props.dataKey,\n      name = _graphicalItem$props.name,\n      unit = _graphicalItem$props.unit,\n      formatter = _graphicalItem$props.formatter,\n      tooltipType = _graphicalItem$props.tooltipType,\n      chartType = _graphicalItem$props.chartType;\n  return _objectSpread(_objectSpread({}, filterProps(graphicalItem)), {}, {\n    dataKey: dataKey,\n    unit: unit,\n    formatter: formatter,\n    name: name || dataKey,\n    color: getMainColorOfGraphicItem(graphicalItem),\n    value: getValueByDataKey(payload, dataKey),\n    type: tooltipType,\n    payload: payload,\n    chartType: chartType\n  });\n};","map":{"version":3,"sources":["/Users/prayugsigdel/Coding/Trades/node_modules/recharts/es6/util/ChartUtils.js"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","key","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","n","toString","slice","name","Array","from","test","iter","isArray","len","i","arr2","d3Scales","stack","shapeStack","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderNone","max","min","isNil","isFunction","isString","get","flatMap","isNan","upperFirst","isEqual","sortBy","getNiceTickValues","getTickValuesFixedDomain","ErrorBar","findEntryInArray","getPercentValue","isNumber","isNumOrStr","mathSign","uniqueId","filterProps","findAllByType","getDisplayName","getLegendProps","getValueByDataKey","dataKey","defaultValue","getDomainOfDataByKey","data","type","filterNil","flattenData","entry","domain","parseFloat","Infinity","validateData","map","Date","calculateActiveTickIndex","coordinate","_ticks$length","ticks","unsortedTicks","axis","index","axisType","Math","abs","range","before","cur","after","sameDirectionCoord","diffInterval","curInRange","afterInRange","sameInterval","minValue","maxValue","_i","getMainColorOfGraphicItem","item","_ref","displayName","_item$props","props","stroke","fill","result","getBarSizeList","_ref2","globalSize","barSize","_ref2$stackGroups","stackGroups","numericAxisIds","sgs","stackIds","j","sLen","_sgs$stackIds$j","items","cateAxisId","barItems","indexOf","selfSize","cateId","stackList","getBarPosition","_ref3","barGap","barCategoryGap","bandSize","_ref3$sizeList","sizeList","maxBarSize","realBarGap","initialValue","useFull","fullBarSize","sum","reduce","offset","prev","size","newPosition","position","newRes","concat","_offset","originalSize","appendOffsetOfLegend","_unused","legendBox","children","width","margin","legendWidth","left","right","legendProps","_ref4","boxWidth","boxHeight","height","align","verticalAlign","layout","isErrorBarRelevantForAxis","direction","getDomainOfErrorBars","errorBars","errorBarChild","entryValue","mainValue","errorDomain","prevErrorArr","k","errorValue","lowerValue","upperValue","parseErrorBarsOfAxis","domains","getDomainOfItemsWithSameAxis","tag","isCategoricalAxis","getCoordinatesOfGrid","syncWithTicks","hasMin","hasMax","values","getTicksOfAxis","isGrid","isAll","scale","duplicateDomain","offsetForBand","realScaleType","bandwidth","niceTicks","scaleContent","row","isCategorical","categoricalDomain","tickCount","handlerWeakMap","WeakMap","combineEventHandlers","defaultHandler","childHandler","has","set","childWeakMap","combineHandler","parseScale","chartType","hasBar","scaleBand","scaleLinear","scalePoint","EPS","checkDomainOfScale","first","last","findPositionOfBar","barPosition","child","truncateByDomain","offsetSign","series","m","positive","negative","offsetPositive","STACK_OFFSET_MAP","sign","expand","none","silhouette","wiggle","getStackedData","stackItems","offsetType","dataKeys","offsetAccessor","d","order","getStackGroupsByAxisId","_items","numericAxisId","reverseStackOrder","reverse","parentStackGroupsInitialValue","_item$props2","stackId","hide","axisId","parentGroup","hasStack","childGroup","axisStackGroupsInitialValue","group","stackGroupsInitialValue","g","stackedData","getTicksOfScale","opts","originalDomain","allowDecimals","scaleType","tickValues","_domain","_tickValues","getCateCoordinateOfLine","_ref5","allowDuplicatedCategory","matchedTick","getCateCoordinateOfBar","_ref6","getBaseValueOfBar","_ref7","numericAxis","getStackedDataOfItem","itemIndex","getDomainOfSingle","getDomainOfStackGroups","startIndex","endIndex","s","MIN_VALUE_REG","MAX_VALUE_REG","parseSpecifiedDomain","specifiedDomain","dataDomain","allowDataOverflow","exec","_value","getBandSizeOfAxis","isBar","bandWidth","orderedTicks","parseDomainOfCategoryAxis","calculatedDomain","axisChild","getTooltipItem","graphicalItem","payload","_graphicalItem$props","unit","formatter","tooltipType","color"],"mappings":"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","sourcesContent":["function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport * as d3Scales from 'victory-vendor/d3-scale';\nimport { stack as shapeStack, stackOffsetExpand, stackOffsetNone, stackOffsetSilhouette, stackOffsetWiggle, stackOrderNone } from 'victory-vendor/d3-shape';\nimport max from 'lodash/max';\nimport min from 'lodash/min';\nimport isNil from 'lodash/isNil';\nimport isFunction from 'lodash/isFunction';\nimport isString from 'lodash/isString';\nimport get from 'lodash/get';\nimport flatMap from 'lodash/flatMap';\nimport isNan from 'lodash/isNaN';\nimport upperFirst from 'lodash/upperFirst';\nimport isEqual from 'lodash/isEqual';\nimport sortBy from 'lodash/sortBy';\nimport { getNiceTickValues, getTickValuesFixedDomain } from 'recharts-scale';\nimport { ErrorBar } from '../cartesian/ErrorBar';\nimport { findEntryInArray, getPercentValue, isNumber, isNumOrStr, mathSign, uniqueId } from './DataUtils';\nimport { filterProps, findAllByType, getDisplayName } from './ReactUtils';\n// TODO: Cause of circular dependency. Needs refactor.\n// import { RadiusAxisProps, AngleAxisProps } from '../polar/types';\nimport { getLegendProps } from './getLegendProps';\n\n// Exported for backwards compatibility\nexport { getLegendProps };\nexport function getValueByDataKey(obj, dataKey, defaultValue) {\n  if (isNil(obj) || isNil(dataKey)) {\n    return defaultValue;\n  }\n  if (isNumOrStr(dataKey)) {\n    return get(obj, dataKey, defaultValue);\n  }\n  if (isFunction(dataKey)) {\n    return dataKey(obj);\n  }\n  return defaultValue;\n}\n/**\n * Get domain of data by key.\n * @param  {Array}   data      The data displayed in the chart\n * @param  {String}  key       The unique key of a group of data\n * @param  {String}  type      The type of axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array} Domain of data\n */\nexport function getDomainOfDataByKey(data, key, type, filterNil) {\n  var flattenData = flatMap(data, function (entry) {\n    return getValueByDataKey(entry, key);\n  });\n  if (type === 'number') {\n    // @ts-expect-error parseFloat type only accepts strings\n    var domain = flattenData.filter(function (entry) {\n      return isNumber(entry) || parseFloat(entry);\n    });\n    return domain.length ? [min(domain), max(domain)] : [Infinity, -Infinity];\n  }\n  var validateData = filterNil ? flattenData.filter(function (entry) {\n    return !isNil(entry);\n  }) : flattenData;\n\n  // Supports x-axis of Date type\n  return validateData.map(function (entry) {\n    return isNumOrStr(entry) || entry instanceof Date ? entry : '';\n  });\n}\nexport var calculateActiveTickIndex = function calculateActiveTickIndex(coordinate) {\n  var _ticks$length;\n  var ticks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var unsortedTicks = arguments.length > 2 ? arguments[2] : undefined;\n  var axis = arguments.length > 3 ? arguments[3] : undefined;\n  var index = -1;\n  var len = (_ticks$length = ticks === null || ticks === void 0 ? void 0 : ticks.length) !== null && _ticks$length !== void 0 ? _ticks$length : 0;\n\n  // if there are 1 or less ticks ticks then the active tick is at index 0\n  if (len <= 1) {\n    return 0;\n  }\n  if (axis && axis.axisType === 'angleAxis' && Math.abs(Math.abs(axis.range[1] - axis.range[0]) - 360) <= 1e-6) {\n    var range = axis.range;\n    // ticks are distributed in a circle\n    for (var i = 0; i < len; i++) {\n      var before = i > 0 ? unsortedTicks[i - 1].coordinate : unsortedTicks[len - 1].coordinate;\n      var cur = unsortedTicks[i].coordinate;\n      var after = i >= len - 1 ? unsortedTicks[0].coordinate : unsortedTicks[i + 1].coordinate;\n      var sameDirectionCoord = void 0;\n      if (mathSign(cur - before) !== mathSign(after - cur)) {\n        var diffInterval = [];\n        if (mathSign(after - cur) === mathSign(range[1] - range[0])) {\n          sameDirectionCoord = after;\n          var curInRange = cur + range[1] - range[0];\n          diffInterval[0] = Math.min(curInRange, (curInRange + before) / 2);\n          diffInterval[1] = Math.max(curInRange, (curInRange + before) / 2);\n        } else {\n          sameDirectionCoord = before;\n          var afterInRange = after + range[1] - range[0];\n          diffInterval[0] = Math.min(cur, (afterInRange + cur) / 2);\n          diffInterval[1] = Math.max(cur, (afterInRange + cur) / 2);\n        }\n        var sameInterval = [Math.min(cur, (sameDirectionCoord + cur) / 2), Math.max(cur, (sameDirectionCoord + cur) / 2)];\n        if (coordinate > sameInterval[0] && coordinate <= sameInterval[1] || coordinate >= diffInterval[0] && coordinate <= diffInterval[1]) {\n          index = unsortedTicks[i].index;\n          break;\n        }\n      } else {\n        var minValue = Math.min(before, after);\n        var maxValue = Math.max(before, after);\n        if (coordinate > (minValue + cur) / 2 && coordinate <= (maxValue + cur) / 2) {\n          index = unsortedTicks[i].index;\n          break;\n        }\n      }\n    }\n  } else {\n    // ticks are distributed in a single direction\n    for (var _i = 0; _i < len; _i++) {\n      if (_i === 0 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i > 0 && _i < len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i === len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2) {\n        index = ticks[_i].index;\n        break;\n      }\n    }\n  }\n  return index;\n};\n\n/**\n * Get the main color of each graphic item\n * @param  {ReactElement} item A graphic item\n * @return {String}            Color\n */\nexport var getMainColorOfGraphicItem = function getMainColorOfGraphicItem(item) {\n  var _ref = item,\n    displayName = _ref.type.displayName; // TODO: check if displayName is valid.\n  var _item$props = item.props,\n    stroke = _item$props.stroke,\n    fill = _item$props.fill;\n  var result;\n  switch (displayName) {\n    case 'Line':\n      result = stroke;\n      break;\n    case 'Area':\n    case 'Radar':\n      result = stroke && stroke !== 'none' ? stroke : fill;\n      break;\n    default:\n      result = fill;\n      break;\n  }\n  return result;\n};\n/**\n * Calculate the size of all groups for stacked bar graph\n * @param  {Object} stackGroups The items grouped by axisId and stackId\n * @return {Object} The size of all groups\n */\nexport var getBarSizeList = function getBarSizeList(_ref2) {\n  var globalSize = _ref2.barSize,\n    _ref2$stackGroups = _ref2.stackGroups,\n    stackGroups = _ref2$stackGroups === void 0 ? {} : _ref2$stackGroups;\n  if (!stackGroups) {\n    return {};\n  }\n  var result = {};\n  var numericAxisIds = Object.keys(stackGroups);\n  for (var i = 0, len = numericAxisIds.length; i < len; i++) {\n    var sgs = stackGroups[numericAxisIds[i]].stackGroups;\n    var stackIds = Object.keys(sgs);\n    for (var j = 0, sLen = stackIds.length; j < sLen; j++) {\n      var _sgs$stackIds$j = sgs[stackIds[j]],\n        items = _sgs$stackIds$j.items,\n        cateAxisId = _sgs$stackIds$j.cateAxisId;\n      var barItems = items.filter(function (item) {\n        return getDisplayName(item.type).indexOf('Bar') >= 0;\n      });\n      if (barItems && barItems.length) {\n        var selfSize = barItems[0].props.barSize;\n        var cateId = barItems[0].props[cateAxisId];\n        if (!result[cateId]) {\n          result[cateId] = [];\n        }\n        result[cateId].push({\n          item: barItems[0],\n          stackList: barItems.slice(1),\n          barSize: isNil(selfSize) ? globalSize : selfSize\n        });\n      }\n    }\n  }\n  return result;\n};\n/**\n * Calculate the size of each bar and offset between start of band and the bar\n *\n * @param  {number} bandSize is the size of area where bars can render\n * @param  {number | string} barGap is the gap size, as a percentage of `bandSize`.\n *                                  Can be defined as number or percent string\n * @param  {number | string} barCategoryGap is the gap size, as a percentage of `bandSize`.\n *                                  Can be defined as number or percent string\n * @param  {Array<object>} sizeList Sizes of all groups\n * @param  {number} maxBarSize The maximum size of each bar\n * @return {Array<object>} The size and offset of each bar\n */\nexport var getBarPosition = function getBarPosition(_ref3) {\n  var barGap = _ref3.barGap,\n    barCategoryGap = _ref3.barCategoryGap,\n    bandSize = _ref3.bandSize,\n    _ref3$sizeList = _ref3.sizeList,\n    sizeList = _ref3$sizeList === void 0 ? [] : _ref3$sizeList,\n    maxBarSize = _ref3.maxBarSize;\n  var len = sizeList.length;\n  if (len < 1) return null;\n  var realBarGap = getPercentValue(barGap, bandSize, 0, true);\n  var result;\n  var initialValue = [];\n\n  // whether or not is barSize setted by user\n  if (sizeList[0].barSize === +sizeList[0].barSize) {\n    var useFull = false;\n    var fullBarSize = bandSize / len;\n    // @ts-expect-error the type check above does not check for type number explicitly\n    var sum = sizeList.reduce(function (res, entry) {\n      return res + entry.barSize || 0;\n    }, 0);\n    sum += (len - 1) * realBarGap;\n    if (sum >= bandSize) {\n      sum -= (len - 1) * realBarGap;\n      realBarGap = 0;\n    }\n    if (sum >= bandSize && fullBarSize > 0) {\n      useFull = true;\n      fullBarSize *= 0.9;\n      sum = len * fullBarSize;\n    }\n    var offset = (bandSize - sum) / 2 >> 0;\n    var prev = {\n      offset: offset - realBarGap,\n      size: 0\n    };\n    result = sizeList.reduce(function (res, entry) {\n      var newPosition = {\n        item: entry.item,\n        position: {\n          offset: prev.offset + prev.size + realBarGap,\n          // @ts-expect-error the type check above does not check for type number explicitly\n          size: useFull ? fullBarSize : entry.barSize\n        }\n      };\n      var newRes = [].concat(_toConsumableArray(res), [newPosition]);\n      prev = newRes[newRes.length - 1].position;\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: prev\n          });\n        });\n      }\n      return newRes;\n    }, initialValue);\n  } else {\n    var _offset = getPercentValue(barCategoryGap, bandSize, 0, true);\n    if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {\n      realBarGap = 0;\n    }\n    var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;\n    if (originalSize > 1) {\n      originalSize >>= 0;\n    }\n    var size = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;\n    result = sizeList.reduce(function (res, entry, i) {\n      var newRes = [].concat(_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,\n          size: size\n        }\n      }]);\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: newRes[newRes.length - 1].position\n          });\n        });\n      }\n      return newRes;\n    }, initialValue);\n  }\n  return result;\n};\nexport var appendOffsetOfLegend = function appendOffsetOfLegend(offset, _unused, props, legendBox) {\n  var children = props.children,\n    width = props.width,\n    margin = props.margin;\n  var legendWidth = width - (margin.left || 0) - (margin.right || 0);\n  var legendProps = getLegendProps({\n    children: children,\n    legendWidth: legendWidth\n  });\n  if (legendProps) {\n    var _ref4 = legendBox || {},\n      boxWidth = _ref4.width,\n      boxHeight = _ref4.height;\n    var align = legendProps.align,\n      verticalAlign = legendProps.verticalAlign,\n      layout = legendProps.layout;\n    if ((layout === 'vertical' || layout === 'horizontal' && verticalAlign === 'middle') && align !== 'center' && isNumber(offset[align])) {\n      return _objectSpread(_objectSpread({}, offset), {}, _defineProperty({}, align, offset[align] + (boxWidth || 0)));\n    }\n    if ((layout === 'horizontal' || layout === 'vertical' && align === 'center') && verticalAlign !== 'middle' && isNumber(offset[verticalAlign])) {\n      return _objectSpread(_objectSpread({}, offset), {}, _defineProperty({}, verticalAlign, offset[verticalAlign] + (boxHeight || 0)));\n    }\n  }\n  return offset;\n};\nvar isErrorBarRelevantForAxis = function isErrorBarRelevantForAxis(layout, axisType, direction) {\n  if (isNil(axisType)) {\n    return true;\n  }\n  if (layout === 'horizontal') {\n    return axisType === 'yAxis';\n  }\n  if (layout === 'vertical') {\n    return axisType === 'xAxis';\n  }\n  if (direction === 'x') {\n    return axisType === 'xAxis';\n  }\n  if (direction === 'y') {\n    return axisType === 'yAxis';\n  }\n  return true;\n};\nexport var getDomainOfErrorBars = function getDomainOfErrorBars(data, item, dataKey, layout, axisType) {\n  var children = item.props.children;\n  var errorBars = findAllByType(children, ErrorBar).filter(function (errorBarChild) {\n    return isErrorBarRelevantForAxis(layout, axisType, errorBarChild.props.direction);\n  });\n  if (errorBars && errorBars.length) {\n    var keys = errorBars.map(function (errorBarChild) {\n      return errorBarChild.props.dataKey;\n    });\n    return data.reduce(function (result, entry) {\n      var entryValue = getValueByDataKey(entry, dataKey, 0);\n      var mainValue = Array.isArray(entryValue) ? [min(entryValue), max(entryValue)] : [entryValue, entryValue];\n      var errorDomain = keys.reduce(function (prevErrorArr, k) {\n        var errorValue = getValueByDataKey(entry, k, 0);\n        var lowerValue = mainValue[0] - Math.abs(Array.isArray(errorValue) ? errorValue[0] : errorValue);\n        var upperValue = mainValue[1] + Math.abs(Array.isArray(errorValue) ? errorValue[1] : errorValue);\n        return [Math.min(lowerValue, prevErrorArr[0]), Math.max(upperValue, prevErrorArr[1])];\n      }, [Infinity, -Infinity]);\n      return [Math.min(errorDomain[0], result[0]), Math.max(errorDomain[1], result[1])];\n    }, [Infinity, -Infinity]);\n  }\n  return null;\n};\nexport var parseErrorBarsOfAxis = function parseErrorBarsOfAxis(data, items, dataKey, axisType, layout) {\n  var domains = items.map(function (item) {\n    return getDomainOfErrorBars(data, item, dataKey, layout, axisType);\n  }).filter(function (entry) {\n    return !isNil(entry);\n  });\n  if (domains && domains.length) {\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n  return null;\n};\n\n/**\n * Get domain of data by the configuration of item element\n * @param  {Array}   data      The data displayed in the chart\n * @param  {Array}   items     The instances of item\n * @param  {String}  type      The type of axis, number - Number Axis, category - Category Axis\n * @param  {LayoutType} layout The type of layout\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array}        Domain\n */\nexport var getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis(data, items, type, layout, filterNil) {\n  var domains = items.map(function (item) {\n    var dataKey = item.props.dataKey;\n    if (type === 'number' && dataKey) {\n      return getDomainOfErrorBars(data, item, dataKey, layout) || getDomainOfDataByKey(data, dataKey, type, filterNil);\n    }\n    return getDomainOfDataByKey(data, dataKey, type, filterNil);\n  });\n  if (type === 'number') {\n    // Calculate the domain of number axis\n    return domains.reduce(\n    // @ts-expect-error if (type === number) means that the domain is numerical type\n    // - but this link is missing in the type definition\n    function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n  var tag = {};\n  // Get the union set of category axis\n  return domains.reduce(function (result, entry) {\n    for (var i = 0, len = entry.length; i < len; i++) {\n      // @ts-expect-error Date cannot index an object\n      if (!tag[entry[i]]) {\n        // @ts-expect-error Date cannot index an object\n        tag[entry[i]] = true;\n\n        // @ts-expect-error Date cannot index an object\n        result.push(entry[i]);\n      }\n    }\n    return result;\n  }, []);\n};\nexport var isCategoricalAxis = function isCategoricalAxis(layout, axisType) {\n  return layout === 'horizontal' && axisType === 'xAxis' || layout === 'vertical' && axisType === 'yAxis' || layout === 'centric' && axisType === 'angleAxis' || layout === 'radial' && axisType === 'radiusAxis';\n};\n\n/**\n * Calculate the Coordinates of grid\n * @param  {Array} ticks           The ticks in axis\n * @param {Number} minValue        The minimun value of axis\n * @param {Number} maxValue        The maximun value of axis\n * @param {boolean} syncWithTicks  Synchronize grid lines with ticks or not\n * @return {Array}                 Coordinates\n */\nexport var getCoordinatesOfGrid = function getCoordinatesOfGrid(ticks, minValue, maxValue, syncWithTicks) {\n  if (syncWithTicks) {\n    return ticks.map(function (entry) {\n      return entry.coordinate;\n    });\n  }\n  var hasMin, hasMax;\n  var values = ticks.map(function (entry) {\n    if (entry.coordinate === minValue) {\n      hasMin = true;\n    }\n    if (entry.coordinate === maxValue) {\n      hasMax = true;\n    }\n    return entry.coordinate;\n  });\n  if (!hasMin) {\n    values.push(minValue);\n  }\n  if (!hasMax) {\n    values.push(maxValue);\n  }\n  return values;\n};\n\n/**\n * Get the ticks of an axis\n * @param  {Object}  axis The configuration of an axis\n * @param {Boolean} isGrid Whether or not are the ticks in grid\n * @param {Boolean} isAll Return the ticks of all the points or not\n * @return {Array}  Ticks\n */\nexport var getTicksOfAxis = function getTicksOfAxis(axis, isGrid, isAll) {\n  if (!axis) return null;\n  var scale = axis.scale;\n  var duplicateDomain = axis.duplicateDomain,\n    type = axis.type,\n    range = axis.range;\n  var offsetForBand = axis.realScaleType === 'scaleBand' ? scale.bandwidth() / 2 : 2;\n  var offset = (isGrid || isAll) && type === 'category' && scale.bandwidth ? scale.bandwidth() / offsetForBand : 0;\n  offset = axis.axisType === 'angleAxis' && (range === null || range === void 0 ? void 0 : range.length) >= 2 ? mathSign(range[0] - range[1]) * 2 * offset : offset;\n\n  // The ticks set by user should only affect the ticks adjacent to axis line\n  if (isGrid && (axis.ticks || axis.niceTicks)) {\n    var result = (axis.ticks || axis.niceTicks).map(function (entry) {\n      var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;\n      return {\n        // If the scaleContent is not a number, the coordinate will be NaN.\n        // That could be the case for example with a PointScale and a string as domain.\n        coordinate: scale(scaleContent) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n    return result.filter(function (row) {\n      return !isNan(row.coordinate);\n    });\n  }\n\n  // When axis is a categorial axis, but the type of axis is number or the scale of axis is not \"auto\"\n  if (axis.isCategorical && axis.categoricalDomain) {\n    return axis.categoricalDomain.map(function (entry, index) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        index: index,\n        offset: offset\n      };\n    });\n  }\n  if (scale.ticks && !isAll) {\n    return scale.ticks(axis.tickCount).map(function (entry) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  }\n\n  // When axis has duplicated text, serial numbers are used to generate scale\n  return scale.domain().map(function (entry, index) {\n    return {\n      coordinate: scale(entry) + offset,\n      value: duplicateDomain ? duplicateDomain[entry] : entry,\n      index: index,\n      offset: offset\n    };\n  });\n};\n\n/**\n * combine the handlers\n * @param  {Function} defaultHandler Internal private handler\n * @param  {Function} childHandler Handler function specified in child component\n * @return {Function}                The combined handler\n */\n\nvar handlerWeakMap = new WeakMap();\nexport var combineEventHandlers = function combineEventHandlers(defaultHandler, childHandler) {\n  if (typeof childHandler !== 'function') {\n    return defaultHandler;\n  }\n  if (!handlerWeakMap.has(defaultHandler)) {\n    handlerWeakMap.set(defaultHandler, new WeakMap());\n  }\n  var childWeakMap = handlerWeakMap.get(defaultHandler);\n  if (childWeakMap.has(childHandler)) {\n    return childWeakMap.get(childHandler);\n  }\n  var combineHandler = function combineHandler() {\n    defaultHandler.apply(void 0, arguments);\n    childHandler.apply(void 0, arguments);\n  };\n  childWeakMap.set(childHandler, combineHandler);\n  return combineHandler;\n};\n\n/**\n * Parse the scale function of axis\n * @param  {Object}   axis          The option of axis\n * @param  {String}   chartType     The displayName of chart\n * @param  {Boolean}  hasBar        if it has a bar\n * @return {object}               The scale function and resolved name\n */\nexport var parseScale = function parseScale(axis, chartType, hasBar) {\n  var scale = axis.scale,\n    type = axis.type,\n    layout = axis.layout,\n    axisType = axis.axisType;\n  if (scale === 'auto') {\n    if (layout === 'radial' && axisType === 'radiusAxis') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n    if (layout === 'radial' && axisType === 'angleAxis') {\n      return {\n        scale: d3Scales.scaleLinear(),\n        realScaleType: 'linear'\n      };\n    }\n    if (type === 'category' && chartType && (chartType.indexOf('LineChart') >= 0 || chartType.indexOf('AreaChart') >= 0 || chartType.indexOf('ComposedChart') >= 0 && !hasBar)) {\n      return {\n        scale: d3Scales.scalePoint(),\n        realScaleType: 'point'\n      };\n    }\n    if (type === 'category') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n    return {\n      scale: d3Scales.scaleLinear(),\n      realScaleType: 'linear'\n    };\n  }\n  if (isString(scale)) {\n    var name = \"scale\".concat(upperFirst(scale));\n    return {\n      scale: (d3Scales[name] || d3Scales.scalePoint)(),\n      realScaleType: d3Scales[name] ? name : 'point'\n    };\n  }\n  return isFunction(scale) ? {\n    scale: scale\n  } : {\n    scale: d3Scales.scalePoint(),\n    realScaleType: 'point'\n  };\n};\nvar EPS = 1e-4;\nexport var checkDomainOfScale = function checkDomainOfScale(scale) {\n  var domain = scale.domain();\n  if (!domain || domain.length <= 2) {\n    return;\n  }\n  var len = domain.length;\n  var range = scale.range();\n  var minValue = Math.min(range[0], range[1]) - EPS;\n  var maxValue = Math.max(range[0], range[1]) + EPS;\n  var first = scale(domain[0]);\n  var last = scale(domain[len - 1]);\n  if (first < minValue || first > maxValue || last < minValue || last > maxValue) {\n    scale.domain([domain[0], domain[len - 1]]);\n  }\n};\nexport var findPositionOfBar = function findPositionOfBar(barPosition, child) {\n  if (!barPosition) {\n    return null;\n  }\n  for (var i = 0, len = barPosition.length; i < len; i++) {\n    if (barPosition[i].item === child) {\n      return barPosition[i].position;\n    }\n  }\n  return null;\n};\n\n/**\n * Both value and domain are tuples of two numbers\n * - but the type stays as array of numbers until we have better support in rest of the app\n * @param {Array} value input that will be truncated\n * @param {Array} domain boundaries\n * @returns {Array} tuple of two numbers\n */\nexport var truncateByDomain = function truncateByDomain(value, domain) {\n  if (!domain || domain.length !== 2 || !isNumber(domain[0]) || !isNumber(domain[1])) {\n    return value;\n  }\n  var minValue = Math.min(domain[0], domain[1]);\n  var maxValue = Math.max(domain[0], domain[1]);\n  var result = [value[0], value[1]];\n  if (!isNumber(value[0]) || value[0] < minValue) {\n    result[0] = minValue;\n  }\n  if (!isNumber(value[1]) || value[1] > maxValue) {\n    result[1] = maxValue;\n  }\n  if (result[0] > maxValue) {\n    result[0] = maxValue;\n  }\n  if (result[1] < minValue) {\n    result[1] = minValue;\n  }\n  return result;\n};\n\n/**\n * Stacks all positive numbers above zero and all negative numbers below zero.\n *\n * If all values in the series are positive then this behaves the same as 'none' stacker.\n *\n * @param {Array} series from d3-shape Stack\n * @return {Array} series with applied offset\n */\nexport var offsetSign = function offsetSign(series) {\n  var n = series.length;\n  if (n <= 0) {\n    return;\n  }\n  for (var j = 0, m = series[0].length; j < m; ++j) {\n    var positive = 0;\n    var negative = 0;\n    for (var i = 0; i < n; ++i) {\n      var value = isNan(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n\n      /* eslint-disable prefer-destructuring, no-param-reassign */\n      if (value >= 0) {\n        series[i][j][0] = positive;\n        series[i][j][1] = positive + value;\n        positive = series[i][j][1];\n      } else {\n        series[i][j][0] = negative;\n        series[i][j][1] = negative + value;\n        negative = series[i][j][1];\n      }\n      /* eslint-enable prefer-destructuring, no-param-reassign */\n    }\n  }\n};\n\n/**\n * Replaces all negative values with zero when stacking data.\n *\n * If all values in the series are positive then this behaves the same as 'none' stacker.\n *\n * @param {Array} series from d3-shape Stack\n * @return {Array} series with applied offset\n */\nexport var offsetPositive = function offsetPositive(series) {\n  var n = series.length;\n  if (n <= 0) {\n    return;\n  }\n  for (var j = 0, m = series[0].length; j < m; ++j) {\n    var positive = 0;\n    for (var i = 0; i < n; ++i) {\n      var value = isNan(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n\n      /* eslint-disable prefer-destructuring, no-param-reassign */\n      if (value >= 0) {\n        series[i][j][0] = positive;\n        series[i][j][1] = positive + value;\n        positive = series[i][j][1];\n      } else {\n        series[i][j][0] = 0;\n        series[i][j][1] = 0;\n      }\n      /* eslint-enable prefer-destructuring, no-param-reassign */\n    }\n  }\n};\n\n/**\n * Function type to compute offset for stacked data.\n *\n * d3-shape has something fishy going on with its types.\n * In @definitelytyped/d3-shape, this function (the offset accessor) is typed as Series<> => void.\n * However! When I actually open the storybook I can see that the offset accessor actually receives Array<Series<>>.\n * The same I can see in the source code itself:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/66042\n * That one unfortunately has no types but we can tell it passes three-dimensional array.\n *\n * Which leads me to believe that definitelytyped is wrong on this one.\n * There's open discussion on this topic without much attention:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/66042\n */\n\nvar STACK_OFFSET_MAP = {\n  sign: offsetSign,\n  // @ts-expect-error definitelytyped types are incorrect\n  expand: stackOffsetExpand,\n  // @ts-expect-error definitelytyped types are incorrect\n  none: stackOffsetNone,\n  // @ts-expect-error definitelytyped types are incorrect\n  silhouette: stackOffsetSilhouette,\n  // @ts-expect-error definitelytyped types are incorrect\n  wiggle: stackOffsetWiggle,\n  positive: offsetPositive\n};\nexport var getStackedData = function getStackedData(data, stackItems, offsetType) {\n  var dataKeys = stackItems.map(function (item) {\n    return item.props.dataKey;\n  });\n  var offsetAccessor = STACK_OFFSET_MAP[offsetType];\n  var stack = shapeStack()\n  // @ts-expect-error stack.keys type wants an array of strings, but we provide array of DataKeys\n  .keys(dataKeys).value(function (d, key) {\n    return +getValueByDataKey(d, key, 0);\n  }).order(stackOrderNone)\n  // @ts-expect-error definitelytyped types are incorrect\n  .offset(offsetAccessor);\n  return stack(data);\n};\nexport var getStackGroupsByAxisId = function getStackGroupsByAxisId(data, _items, numericAxisId, cateAxisId, offsetType, reverseStackOrder) {\n  if (!data) {\n    return null;\n  }\n\n  // reversing items to affect render order (for layering)\n  var items = reverseStackOrder ? _items.reverse() : _items;\n  var parentStackGroupsInitialValue = {};\n  var stackGroups = items.reduce(function (result, item) {\n    var _item$props2 = item.props,\n      stackId = _item$props2.stackId,\n      hide = _item$props2.hide;\n    if (hide) {\n      return result;\n    }\n    var axisId = item.props[numericAxisId];\n    var parentGroup = result[axisId] || {\n      hasStack: false,\n      stackGroups: {}\n    };\n    if (isNumOrStr(stackId)) {\n      var childGroup = parentGroup.stackGroups[stackId] || {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: []\n      };\n      childGroup.items.push(item);\n      parentGroup.hasStack = true;\n      parentGroup.stackGroups[stackId] = childGroup;\n    } else {\n      parentGroup.stackGroups[uniqueId('_stackId_')] = {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: [item]\n      };\n    }\n    return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, parentGroup));\n  }, parentStackGroupsInitialValue);\n  var axisStackGroupsInitialValue = {};\n  return Object.keys(stackGroups).reduce(function (result, axisId) {\n    var group = stackGroups[axisId];\n    if (group.hasStack) {\n      var stackGroupsInitialValue = {};\n      group.stackGroups = Object.keys(group.stackGroups).reduce(function (res, stackId) {\n        var g = group.stackGroups[stackId];\n        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, stackId, {\n          numericAxisId: numericAxisId,\n          cateAxisId: cateAxisId,\n          items: g.items,\n          stackedData: getStackedData(data, g.items, offsetType)\n        }));\n      }, stackGroupsInitialValue);\n    }\n    return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, group));\n  }, axisStackGroupsInitialValue);\n};\n\n/**\n * Configure the scale function of axis\n * @param {Object} scale The scale function\n * @param {Object} opts  The configuration of axis\n * @return {Object}      null\n */\nexport var getTicksOfScale = function getTicksOfScale(scale, opts) {\n  var realScaleType = opts.realScaleType,\n    type = opts.type,\n    tickCount = opts.tickCount,\n    originalDomain = opts.originalDomain,\n    allowDecimals = opts.allowDecimals;\n  var scaleType = realScaleType || opts.scale;\n  if (scaleType !== 'auto' && scaleType !== 'linear') {\n    return null;\n  }\n  if (tickCount && type === 'number' && originalDomain && (originalDomain[0] === 'auto' || originalDomain[1] === 'auto')) {\n    // Calculate the ticks by the number of grid when the axis is a number axis\n    var domain = scale.domain();\n    if (!domain.length) {\n      return null;\n    }\n    var tickValues = getNiceTickValues(domain, tickCount, allowDecimals);\n    scale.domain([min(tickValues), max(tickValues)]);\n    return {\n      niceTicks: tickValues\n    };\n  }\n  if (tickCount && type === 'number') {\n    var _domain = scale.domain();\n    var _tickValues = getTickValuesFixedDomain(_domain, tickCount, allowDecimals);\n    return {\n      niceTicks: _tickValues\n    };\n  }\n  return null;\n};\nexport var getCateCoordinateOfLine = function getCateCoordinateOfLine(_ref5) {\n  var axis = _ref5.axis,\n    ticks = _ref5.ticks,\n    bandSize = _ref5.bandSize,\n    entry = _ref5.entry,\n    index = _ref5.index,\n    dataKey = _ref5.dataKey;\n  if (axis.type === 'category') {\n    // find coordinate of category axis by the value of category\n    if (!axis.allowDuplicatedCategory && axis.dataKey && !isNil(entry[axis.dataKey])) {\n      var matchedTick = findEntryInArray(ticks, 'value', entry[axis.dataKey]);\n      if (matchedTick) {\n        return matchedTick.coordinate + bandSize / 2;\n      }\n    }\n    return ticks[index] ? ticks[index].coordinate + bandSize / 2 : null;\n  }\n  var value = getValueByDataKey(entry, !isNil(dataKey) ? dataKey : axis.dataKey);\n  return !isNil(value) ? axis.scale(value) : null;\n};\nexport var getCateCoordinateOfBar = function getCateCoordinateOfBar(_ref6) {\n  var axis = _ref6.axis,\n    ticks = _ref6.ticks,\n    offset = _ref6.offset,\n    bandSize = _ref6.bandSize,\n    entry = _ref6.entry,\n    index = _ref6.index;\n  if (axis.type === 'category') {\n    return ticks[index] ? ticks[index].coordinate + offset : null;\n  }\n  var value = getValueByDataKey(entry, axis.dataKey, axis.domain[index]);\n  return !isNil(value) ? axis.scale(value) - bandSize / 2 + offset : null;\n};\nexport var getBaseValueOfBar = function getBaseValueOfBar(_ref7) {\n  var numericAxis = _ref7.numericAxis;\n  var domain = numericAxis.scale.domain();\n  if (numericAxis.type === 'number') {\n    var minValue = Math.min(domain[0], domain[1]);\n    var maxValue = Math.max(domain[0], domain[1]);\n    if (minValue <= 0 && maxValue >= 0) {\n      return 0;\n    }\n    if (maxValue < 0) {\n      return maxValue;\n    }\n    return minValue;\n  }\n  return domain[0];\n};\nexport var getStackedDataOfItem = function getStackedDataOfItem(item, stackGroups) {\n  var stackId = item.props.stackId;\n  if (isNumOrStr(stackId)) {\n    var group = stackGroups[stackId];\n    if (group) {\n      var itemIndex = group.items.indexOf(item);\n      return itemIndex >= 0 ? group.stackedData[itemIndex] : null;\n    }\n  }\n  return null;\n};\nvar getDomainOfSingle = function getDomainOfSingle(data) {\n  return data.reduce(function (result, entry) {\n    return [min(entry.concat([result[0]]).filter(isNumber)), max(entry.concat([result[1]]).filter(isNumber))];\n  }, [Infinity, -Infinity]);\n};\nexport var getDomainOfStackGroups = function getDomainOfStackGroups(stackGroups, startIndex, endIndex) {\n  return Object.keys(stackGroups).reduce(function (result, stackId) {\n    var group = stackGroups[stackId];\n    var stackedData = group.stackedData;\n    var domain = stackedData.reduce(function (res, entry) {\n      var s = getDomainOfSingle(entry.slice(startIndex, endIndex + 1));\n      return [Math.min(res[0], s[0]), Math.max(res[1], s[1])];\n    }, [Infinity, -Infinity]);\n    return [Math.min(domain[0], result[0]), Math.max(domain[1], result[1])];\n  }, [Infinity, -Infinity]).map(function (result) {\n    return result === Infinity || result === -Infinity ? 0 : result;\n  });\n};\nexport var MIN_VALUE_REG = /^dataMin[\\s]*-[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexport var MAX_VALUE_REG = /^dataMax[\\s]*\\+[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexport var parseSpecifiedDomain = function parseSpecifiedDomain(specifiedDomain, dataDomain, allowDataOverflow) {\n  if (isFunction(specifiedDomain)) {\n    return specifiedDomain(dataDomain, allowDataOverflow);\n  }\n  if (!Array.isArray(specifiedDomain)) {\n    return dataDomain;\n  }\n  var domain = [];\n\n  /* eslint-disable prefer-destructuring */\n  if (isNumber(specifiedDomain[0])) {\n    domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);\n  } else if (MIN_VALUE_REG.test(specifiedDomain[0])) {\n    var value = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];\n    domain[0] = dataDomain[0] - value;\n  } else if (isFunction(specifiedDomain[0])) {\n    domain[0] = specifiedDomain[0](dataDomain[0]);\n  } else {\n    domain[0] = dataDomain[0];\n  }\n  if (isNumber(specifiedDomain[1])) {\n    domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);\n  } else if (MAX_VALUE_REG.test(specifiedDomain[1])) {\n    var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];\n    domain[1] = dataDomain[1] + _value;\n  } else if (isFunction(specifiedDomain[1])) {\n    domain[1] = specifiedDomain[1](dataDomain[1]);\n  } else {\n    domain[1] = dataDomain[1];\n  }\n  /* eslint-enable prefer-destructuring */\n\n  return domain;\n};\n\n/**\n * Calculate the size between two category\n * @param  {Object} axis  The options of axis\n * @param  {Array}  ticks The ticks of axis\n * @param  {Boolean} isBar if items in axis are bars\n * @return {Number} Size\n */\nexport var getBandSizeOfAxis = function getBandSizeOfAxis(axis, ticks, isBar) {\n  // @ts-expect-error we need to rethink scale type\n  if (axis && axis.scale && axis.scale.bandwidth) {\n    // @ts-expect-error we need to rethink scale type\n    var bandWidth = axis.scale.bandwidth();\n    if (!isBar || bandWidth > 0) {\n      return bandWidth;\n    }\n  }\n  if (axis && ticks && ticks.length >= 2) {\n    var orderedTicks = sortBy(ticks, function (o) {\n      return o.coordinate;\n    });\n    var bandSize = Infinity;\n    for (var i = 1, len = orderedTicks.length; i < len; i++) {\n      var cur = orderedTicks[i];\n      var prev = orderedTicks[i - 1];\n      bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);\n    }\n    return bandSize === Infinity ? 0 : bandSize;\n  }\n  return isBar ? undefined : 0;\n};\n/**\n * parse the domain of a category axis when a domain is specified\n * @param   {Array}        specifiedDomain  The domain specified by users\n * @param   {Array}        calculatedDomain The domain calculated by dateKey\n * @param   {ReactElement} axisChild        The axis ReactElement\n * @returns {Array}        domains\n */\nexport var parseDomainOfCategoryAxis = function parseDomainOfCategoryAxis(specifiedDomain, calculatedDomain, axisChild) {\n  if (!specifiedDomain || !specifiedDomain.length) {\n    return calculatedDomain;\n  }\n  if (isEqual(specifiedDomain, get(axisChild, 'type.defaultProps.domain'))) {\n    return calculatedDomain;\n  }\n  return specifiedDomain;\n};\nexport var getTooltipItem = function getTooltipItem(graphicalItem, payload) {\n  var _graphicalItem$props = graphicalItem.props,\n    dataKey = _graphicalItem$props.dataKey,\n    name = _graphicalItem$props.name,\n    unit = _graphicalItem$props.unit,\n    formatter = _graphicalItem$props.formatter,\n    tooltipType = _graphicalItem$props.tooltipType,\n    chartType = _graphicalItem$props.chartType;\n  return _objectSpread(_objectSpread({}, filterProps(graphicalItem)), {}, {\n    dataKey: dataKey,\n    unit: unit,\n    formatter: formatter,\n    name: name || dataKey,\n    color: getMainColorOfGraphicItem(graphicalItem),\n    value: getValueByDataKey(payload, dataKey),\n    type: tooltipType,\n    payload: payload,\n    chartType: chartType\n  });\n};"]},"metadata":{},"sourceType":"module"}